{"version":3,"file":"enable3d.ammoPhysics.0.24.0.min.js","mappings":"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","sources":["webpack://ENABLE3D/webpack/universalModuleDefinition","webpack://ENABLE3D/external umd \"ConvexGeometry\"","webpack://ENABLE3D/external umd \"THREE\"","webpack://ENABLE3D/./node_modules/@yandeu/events/cjs/index.js","webpack://ENABLE3D/./node_modules/@yandeu/events/cjs/version.js","webpack://ENABLE3D/../common/node_modules/@yandeu/events/cjs/index.js","webpack://ENABLE3D/../common/node_modules/@yandeu/events/cjs/version.js","webpack://ENABLE3D/webpack/bootstrap","webpack://ENABLE3D/webpack/runtime/define property getters","webpack://ENABLE3D/webpack/runtime/hasOwnProperty shorthand","webpack://ENABLE3D/webpack/runtime/make namespace object","webpack://ENABLE3D/../common/dist/logger.js","webpack://ENABLE3D/../common/dist/extendedObject3D.js","webpack://ENABLE3D/../common/dist/extendedMesh.js","webpack://ENABLE3D/../common/dist/extendedGroup.js","webpack://ENABLE3D/./src/constraints.ts","webpack://ENABLE3D/./src/three-to-ammo.js","webpack://ENABLE3D/../common/dist/defaultMaterial.js","webpack://ENABLE3D/../common/dist/factories.js","webpack://ENABLE3D/./src/collisionEvents.ts","webpack://ENABLE3D/./src/convexObjectBreaker.ts","webpack://ENABLE3D/../common/dist/wasmLoader.js","webpack://ENABLE3D/../common/dist/physicsLoader.js","webpack://ENABLE3D/../common/dist/applyMixins.js","webpack://ENABLE3D/./src/raycaster/raycaster.ts","webpack://ENABLE3D/./src/raycaster/closestRayResultCallback.ts","webpack://ENABLE3D/./src/raycaster/allHitsRayResultCallback.ts","webpack://ENABLE3D/./src/lib/Clock.ts","webpack://ENABLE3D/./src/physics.ts","webpack://ENABLE3D/./src/shapes.ts","webpack://ENABLE3D/./src/debugDrawer.ts","webpack://ENABLE3D/./src/torusShape.ts","webpack://ENABLE3D/../common/dist/physicsBody.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"THREE\"), require(\"ConvexGeometry\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"THREE\", \"ConvexGeometry\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ENABLE3D\"] = factory(require(\"THREE\"), require(\"ConvexGeometry\"));\n\telse\n\t\troot[\"ENABLE3D\"] = factory(root[\"THREE\"], root[\"ConvexGeometry\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__824__, __WEBPACK_EXTERNAL_MODULE__399__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__399__;","module.exports = __WEBPACK_EXTERNAL_MODULE__824__;","\"use strict\";\r\n/**\r\n * @package      npmjs.com/package/@yandeu/events (events.min.js)\r\n *\r\n * @author       Arnout Kazemier (https://github.com/3rd-Eden)\r\n * @copyright    Copyright (c) 2014 Arnout Kazemier\r\n * @license      {@link https://github.com/primus/eventemitter3/blob/master/LICENSE|MIT}\r\n *\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/yandeu/events\r\n * @license      {@link https://github.com/yandeu/events/blob/master/LICENSE|MIT}\r\n */\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Events = void 0;\r\nvar version_1 = require(\"./version\");\r\nvar EE = /** @class */ (function () {\r\n    function EE(fn, context, once) {\r\n        if (once === void 0) { once = false; }\r\n        this.fn = fn;\r\n        this.context = context;\r\n        this.once = once;\r\n    }\r\n    return EE;\r\n}());\r\nvar addListener = function (emitter, event, fn, context, once) {\r\n    if (typeof fn !== 'function') {\r\n        throw new TypeError('The listener must be a function');\r\n    }\r\n    var listener = new EE(fn, context || emitter, once);\r\n    if (!emitter._events.has(event))\r\n        emitter._events.set(event, listener), emitter._eventsCount++;\r\n    else if (!emitter._events.get(event).fn)\r\n        emitter._events.get(event).push(listener);\r\n    else\r\n        emitter._events.set(event, [emitter._events.get(event), listener]);\r\n    return emitter;\r\n};\r\nvar clearEvent = function (emitter, event) {\r\n    if (--emitter._eventsCount === 0)\r\n        emitter._events = new Map();\r\n    else\r\n        emitter._events.delete(event);\r\n};\r\nvar Events = /** @class */ (function () {\r\n    function Events() {\r\n        this._events = new Map();\r\n        this._eventsCount = 0;\r\n    }\r\n    Object.defineProperty(Events, \"VERSION\", {\r\n        get: function () {\r\n            return version_1.VERSION;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Events.prototype.eventNames = function () {\r\n        return Array.from(this._events.keys());\r\n    };\r\n    Events.prototype.listeners = function (event) {\r\n        var handlers = this._events.get(event);\r\n        if (!handlers)\r\n            return [];\r\n        if (handlers.fn)\r\n            return [handlers.fn];\r\n        for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\r\n            ee[i] = handlers[i].fn;\r\n        }\r\n        return ee;\r\n    };\r\n    Events.prototype.listenerCount = function (event) {\r\n        var listeners = this._events.get(event);\r\n        if (!listeners)\r\n            return 0;\r\n        if (listeners.fn)\r\n            return 1;\r\n        return listeners.length;\r\n    };\r\n    Events.prototype.emit = function (event) {\r\n        var _a, _b;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (!this._events.has(event))\r\n            return false;\r\n        var listeners = this._events.get(event);\r\n        var i;\r\n        if (listeners.fn) {\r\n            if (listeners.once)\r\n                this.removeListener(event, listeners.fn, undefined, true);\r\n            return (_a = listeners.fn).call.apply(_a, __spreadArray([listeners.context], args)), true;\r\n        }\r\n        else {\r\n            var length_1 = listeners.length;\r\n            for (i = 0; i < length_1; i++) {\r\n                if (listeners[i].once)\r\n                    this.removeListener(event, listeners[i].fn, undefined, true);\r\n                (_b = listeners[i].fn).call.apply(_b, __spreadArray([listeners[i].context], args));\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Events.prototype.on = function (event, fn, context) {\r\n        return addListener(this, event, fn, context, false);\r\n    };\r\n    Events.prototype.once = function (event, fn, context) {\r\n        return addListener(this, event, fn, context, true);\r\n    };\r\n    Events.prototype.removeListener = function (event, fn, context, once) {\r\n        if (!this._events.has(event))\r\n            return this;\r\n        if (!fn) {\r\n            clearEvent(this, event);\r\n            return this;\r\n        }\r\n        var listeners = this._events.get(event);\r\n        if (listeners.fn) {\r\n            if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {\r\n                clearEvent(this, event);\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0, events = [], length = listeners.length; i < length; i++) {\r\n                if (listeners[i].fn !== fn || (once && !listeners[i].once) || (context && listeners[i].context !== context)) {\r\n                    events.push(listeners[i]);\r\n                }\r\n            }\r\n            // Reset the array, or remove it completely if we have no more listeners.\r\n            if (events.length)\r\n                this._events.set(event, events.length === 1 ? events[0] : events);\r\n            else\r\n                clearEvent(this, event);\r\n        }\r\n        return this;\r\n    };\r\n    Events.prototype.removeAllListeners = function (event) {\r\n        if (event) {\r\n            if (this._events.delete(event))\r\n                clearEvent(this, event);\r\n        }\r\n        else {\r\n            this._events = new Map();\r\n            this._eventsCount = 0;\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(Events.prototype, \"off\", {\r\n        // alias\r\n        get: function () {\r\n            return this.removeListener;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Events.prototype, \"addListener\", {\r\n        // alias\r\n        get: function () {\r\n            return this.on;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Events;\r\n}());\r\nexports.Events = Events;\r\n/** TESTING SECTION */\r\n// type Colors = 'red' | 'blue' | 'yellow'\r\n// interface EventMap {\r\n//   signal: () => void\r\n//   error: (err: string) => void\r\n//   something: (a: number, b: { colors?: Colors[] }, c: [number, number, string]) => void\r\n// }\r\n// const test = new Events<EventMap>()\r\n// const listener: EventListener<EventMap, 'something'> = (a, b, c) => {\r\n//   console.log(a, b.colors, c)\r\n// }\r\n// test.on('something', listener)\r\n// setTimeout(() => {\r\n//   test.removeListener('something', listener)\r\n// }, 5000)\r\n// test.once('error', err => {\r\n//   console.log('error:', err)\r\n// })\r\n// console.log(test.eventNames())\r\n// test.emit('error', 'ok')\r\n// test.emit('error', 'failed')\r\n// test.emit('something', 1234, { colors: ['blue'] }, [3, 3, 'k'])\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.VERSION = void 0;\r\n// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\r\nexports.VERSION = \"0.0.5\";\r\n//# sourceMappingURL=version.js.map","\"use strict\";\r\n/**\r\n * @package      npmjs.com/package/@yandeu/events (events.min.js)\r\n *\r\n * @author       Arnout Kazemier (https://github.com/3rd-Eden)\r\n * @copyright    Copyright (c) 2014 Arnout Kazemier\r\n * @license      {@link https://github.com/primus/eventemitter3/blob/master/LICENSE|MIT}\r\n *\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/yandeu/events\r\n * @license      {@link https://github.com/yandeu/events/blob/master/LICENSE|MIT}\r\n */\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Events = void 0;\r\nvar version_1 = require(\"./version\");\r\nvar EE = /** @class */ (function () {\r\n    function EE(fn, context, once) {\r\n        if (once === void 0) { once = false; }\r\n        this.fn = fn;\r\n        this.context = context;\r\n        this.once = once;\r\n    }\r\n    return EE;\r\n}());\r\nvar addListener = function (emitter, event, fn, context, once) {\r\n    if (typeof fn !== 'function') {\r\n        throw new TypeError('The listener must be a function');\r\n    }\r\n    var listener = new EE(fn, context || emitter, once);\r\n    if (!emitter._events.has(event))\r\n        emitter._events.set(event, listener), emitter._eventsCount++;\r\n    else if (!emitter._events.get(event).fn)\r\n        emitter._events.get(event).push(listener);\r\n    else\r\n        emitter._events.set(event, [emitter._events.get(event), listener]);\r\n    return emitter;\r\n};\r\nvar clearEvent = function (emitter, event) {\r\n    if (--emitter._eventsCount === 0)\r\n        emitter._events = new Map();\r\n    else\r\n        emitter._events.delete(event);\r\n};\r\nvar Events = /** @class */ (function () {\r\n    function Events() {\r\n        this._events = new Map();\r\n        this._eventsCount = 0;\r\n    }\r\n    Object.defineProperty(Events, \"VERSION\", {\r\n        get: function () {\r\n            return version_1.VERSION;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Events.prototype.eventNames = function () {\r\n        return Array.from(this._events.keys());\r\n    };\r\n    Events.prototype.listeners = function (event) {\r\n        var handlers = this._events.get(event);\r\n        if (!handlers)\r\n            return [];\r\n        if (handlers.fn)\r\n            return [handlers.fn];\r\n        for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\r\n            ee[i] = handlers[i].fn;\r\n        }\r\n        return ee;\r\n    };\r\n    Events.prototype.listenerCount = function (event) {\r\n        var listeners = this._events.get(event);\r\n        if (!listeners)\r\n            return 0;\r\n        if (listeners.fn)\r\n            return 1;\r\n        return listeners.length;\r\n    };\r\n    Events.prototype.emit = function (event) {\r\n        var _a, _b;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (!this._events.has(event))\r\n            return false;\r\n        var listeners = this._events.get(event);\r\n        var i;\r\n        if (listeners.fn) {\r\n            if (listeners.once)\r\n                this.removeListener(event, listeners.fn, undefined, true);\r\n            return (_a = listeners.fn).call.apply(_a, __spreadArray([listeners.context], args)), true;\r\n        }\r\n        else {\r\n            var length_1 = listeners.length;\r\n            for (i = 0; i < length_1; i++) {\r\n                if (listeners[i].once)\r\n                    this.removeListener(event, listeners[i].fn, undefined, true);\r\n                (_b = listeners[i].fn).call.apply(_b, __spreadArray([listeners[i].context], args));\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Events.prototype.on = function (event, fn, context) {\r\n        return addListener(this, event, fn, context, false);\r\n    };\r\n    Events.prototype.once = function (event, fn, context) {\r\n        return addListener(this, event, fn, context, true);\r\n    };\r\n    Events.prototype.removeListener = function (event, fn, context, once) {\r\n        if (!this._events.has(event))\r\n            return this;\r\n        if (!fn) {\r\n            clearEvent(this, event);\r\n            return this;\r\n        }\r\n        var listeners = this._events.get(event);\r\n        if (listeners.fn) {\r\n            if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {\r\n                clearEvent(this, event);\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0, events = [], length = listeners.length; i < length; i++) {\r\n                if (listeners[i].fn !== fn || (once && !listeners[i].once) || (context && listeners[i].context !== context)) {\r\n                    events.push(listeners[i]);\r\n                }\r\n            }\r\n            // Reset the array, or remove it completely if we have no more listeners.\r\n            if (events.length)\r\n                this._events.set(event, events.length === 1 ? events[0] : events);\r\n            else\r\n                clearEvent(this, event);\r\n        }\r\n        return this;\r\n    };\r\n    Events.prototype.removeAllListeners = function (event) {\r\n        if (event) {\r\n            if (this._events.delete(event))\r\n                clearEvent(this, event);\r\n        }\r\n        else {\r\n            this._events = new Map();\r\n            this._eventsCount = 0;\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(Events.prototype, \"off\", {\r\n        // alias\r\n        get: function () {\r\n            return this.removeListener;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Events.prototype, \"addListener\", {\r\n        // alias\r\n        get: function () {\r\n            return this.on;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Events;\r\n}());\r\nexports.Events = Events;\r\n/** TESTING SECTION */\r\n// type Colors = 'red' | 'blue' | 'yellow'\r\n// interface EventMap {\r\n//   signal: () => void\r\n//   error: (err: string) => void\r\n//   something: (a: number, b: { colors?: Colors[] }, c: [number, number, string]) => void\r\n// }\r\n// const test = new Events<EventMap>()\r\n// const listener: EventListener<EventMap, 'something'> = (a, b, c) => {\r\n//   console.log(a, b.colors, c)\r\n// }\r\n// test.on('something', listener)\r\n// setTimeout(() => {\r\n//   test.removeListener('something', listener)\r\n// }, 5000)\r\n// test.once('error', err => {\r\n//   console.log('error:', err)\r\n// })\r\n// console.log(test.eventNames())\r\n// test.emit('error', 'ok')\r\n// test.emit('error', 'failed')\r\n// test.emit('something', 1234, { colors: ['blue'] }, [3, 3, 'k'])\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.VERSION = void 0;\r\n// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\r\nexports.VERSION = \"0.0.5\";\r\n//# sourceMappingURL=version.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const loggerCache = new Map();\r\nconst LOG_LIMIT = 5;\r\nexport const logger = (msg, error = false) => {\r\n    if (!loggerCache.has(msg)) {\r\n        loggerCache.set(msg, 1);\r\n    }\r\n    else {\r\n        const count = loggerCache.get(msg);\r\n        if (typeof count === 'undefined')\r\n            return;\r\n        if (count >= LOG_LIMIT)\r\n            return;\r\n        loggerCache.set(msg, count + 1);\r\n    }\r\n    if (error)\r\n        console.error(`%c [enable3d] ${msg} `, 'background: #222; color: #bada55');\r\n    else\r\n        console.warn(`%c [enable3d] ${msg} `, 'background: #222; color: #bada55');\r\n};\r\n//# sourceMappingURL=logger.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nimport { AnimationMixer, LoopOnce, Object3D, Vector3 } from 'three';\r\nimport { logger } from './logger';\r\nexport class ExtendedObject3D extends Object3D {\r\n    constructor() {\r\n        super();\r\n        this.isExtendedObject3D = true;\r\n        this.isGroup = false;\r\n        this.vector3 = new Vector3();\r\n        this.hasBody = false;\r\n        // convex object breaking\r\n        this.fragmentDepth = 0;\r\n        this.breakable = false;\r\n        this.fractureImpulse = 1;\r\n        this._currentAnimation = '';\r\n        this._animationActions = new Map();\r\n        this.name = `object-${this.id}`;\r\n    }\r\n    /** Returns all values relative to the world. */\r\n    get world() {\r\n        return {\r\n            theta: this.worldTheta,\r\n            phi: this.worldPhi\r\n        };\r\n    }\r\n    /** Get the theta relative to the world. */\r\n    get worldTheta() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.atan2(this.vector3.x, this.vector3.z);\r\n    }\r\n    /** Get the phi relative to the world. */\r\n    get worldPhi() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.acos(this.vector3.y);\r\n    }\r\n    set animationMixer(animationMixer) {\r\n        this._animationMixer = animationMixer;\r\n    }\r\n    get animationMixer() {\r\n        if (!this._animationMixer)\r\n            this._animationMixer = new AnimationMixer(this);\r\n        return this._animationMixer;\r\n    }\r\n    /** Control your animations. */\r\n    get anims() {\r\n        return {\r\n            /** Get the name of the current animation. */\r\n            current: this._currentAnimation,\r\n            /** Add animation name and the AnimationClip. */\r\n            add: (name, animation) => this._animsAdd(name, animation),\r\n            /** Get AnimationAction by animation name. */\r\n            get: (name) => this._animsGet(name),\r\n            /**\r\n             * Play an animation.\r\n             * @param name Animation name.\r\n             * @param transitionDuration Transition duration in ms.\r\n             * @param loop Should the animation loop?\r\n             */\r\n            play: (name, transitionDuration = 500, loop = true) => this._animsPlay(name, transitionDuration, loop),\r\n            /** Get the AnimationMixer */\r\n            mixer: this.animationMixer\r\n        };\r\n    }\r\n    /** @deprecated Please use anims instead! */\r\n    get animation() {\r\n        logger('Please use \"anims\" instead of \"animation\"');\r\n        return this.anims;\r\n    }\r\n    _animsAdd(name, animation) {\r\n        this._animationActions.set(name, this.animationMixer.clipAction(animation));\r\n    }\r\n    _animsGet(name) {\r\n        const action = this._animationActions.get(name);\r\n        if (!action)\r\n            logger(`Animation(${name}) not found!`);\r\n        return action;\r\n    }\r\n    _animsPlay(name, transitionDuration = 500, loop = true) {\r\n        const next = this._animationActions.get(name);\r\n        const current = this._animationActions.get(this._currentAnimation);\r\n        if (next) {\r\n            next.reset();\r\n            if (current) {\r\n                next.crossFadeFrom(current, transitionDuration / 1000, true);\r\n                next.clampWhenFinished = true;\r\n            }\r\n            if (!loop)\r\n                next.setLoop(LoopOnce, 0);\r\n            next.play();\r\n        }\r\n        this._currentAnimation = name;\r\n    }\r\n    /** @deprecated Use animation.play(name) instead! */\r\n    setAction(name) {\r\n        logger(`setAction(${name}) is deprecated. Use animation.play(${name}) instead!`);\r\n    }\r\n    traverse(callback) {\r\n        super.traverse(callback);\r\n    }\r\n    traverseVisible(callback) {\r\n        super.traverseVisible(callback);\r\n    }\r\n    traverseAncestors(callback) {\r\n        super.traverseAncestors(callback);\r\n    }\r\n}\r\nexport default ExtendedObject3D;\r\n//# sourceMappingURL=extendedObject3D.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nimport { Mesh, Vector3 } from 'three';\r\nexport class ExtendedMesh extends Mesh {\r\n    constructor(geometry, material) {\r\n        super(geometry, material);\r\n        this.isExtendedMesh = true;\r\n        this.isGroup = false;\r\n        this.vector3 = new Vector3();\r\n        this.hasBody = false;\r\n        // convex object breaking\r\n        this.fragmentDepth = 0;\r\n        this.breakable = false;\r\n        this.fractureImpulse = 1;\r\n        this.name = `object-${this.id}`;\r\n    }\r\n    /** Returns all values relative to the world. */\r\n    get world() {\r\n        return {\r\n            theta: this.worldTheta,\r\n            phi: this.worldPhi\r\n        };\r\n    }\r\n    /** Get the theta relative to the world. */\r\n    get worldTheta() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.atan2(this.vector3.x, this.vector3.z);\r\n    }\r\n    /** Get the phi relative to the world. */\r\n    get worldPhi() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.acos(this.vector3.y);\r\n    }\r\n}\r\n//# sourceMappingURL=extendedMesh.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nimport { Group } from 'three';\r\nexport class ExtendedGroup extends Group {\r\n    constructor() {\r\n        super();\r\n        this.isExtendedGroup = true;\r\n        this.isMesh = false;\r\n        this.hasBody = false;\r\n        // convex object breaking\r\n        this.fragmentDepth = 0;\r\n        this.breakable = false;\r\n        this.fractureImpulse = 1;\r\n        this.name = `object-${this.id}`;\r\n    }\r\n}\r\n//# sourceMappingURL=extendedGroup.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\n// Inspired by https://github.com/donmccurdy/aframe-physics-system/blob/master/src/components/ammo-constraint.js\r\n\r\nimport PhysicsBody from '@enable3d/common/dist/physicsBody'\r\nimport { XYZ } from '@enable3d/common/dist/types'\r\n\r\nexport default class Constraints {\r\n  public tmpBtVector3 = new Ammo.btVector3()\r\n\r\n  constructor(public worldTransform: Ammo.btTransform, public physicsWorld: Ammo.btDiscreteDynamicsWorld) {}\r\n\r\n  private toAmmoV3(v?: XYZ, d: number = 0) {\r\n    return new Ammo.btVector3(\r\n      typeof v?.x !== 'undefined' ? v.x : d,\r\n      typeof v?.y !== 'undefined' ? v.y : d,\r\n      typeof v?.z !== 'undefined' ? v.z : d\r\n    )\r\n  }\r\n\r\n  public get addConstraints() {\r\n    return {\r\n      lock: (bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies?: boolean) =>\r\n        this.lock(bodyA, bodyB, disableCollisionsBetweenLinkedBodies),\r\n      fixed: (bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies?: boolean) =>\r\n        this.fixed(bodyA, bodyB, disableCollisionsBetweenLinkedBodies),\r\n      pointToPoint: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          pivotA?: XYZ\r\n          pivotB?: XYZ\r\n        },\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.pointToPoint(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      hinge: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          pivotA?: XYZ\r\n          pivotB?: XYZ\r\n          axisA?: XYZ\r\n          axisB?: XYZ\r\n        },\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.hinge(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      slider: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          frameA?: XYZ\r\n          frameB?: XYZ\r\n          linearLowerLimit?: number\r\n          linearUpperLimit?: number\r\n          angularLowerLimit?: number\r\n          angularUpperLimit?: number\r\n        } = {},\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.slider(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      spring: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          stiffness?: number\r\n          damping?: number\r\n          angularLock?: boolean\r\n          linearLowerLimit?: XYZ\r\n          linearUpperLimit?: XYZ\r\n          angularLowerLimit?: XYZ\r\n          angularUpperLimit?: XYZ\r\n          center?: boolean\r\n          offset?: XYZ\r\n          enableSpring?: boolean\r\n        } = {},\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.spring(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      coneTwist: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          frameA: XYZ\r\n          frameB: XYZ\r\n        } = { frameA: {}, frameB: {} },\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.coneTwist(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      dof: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config?: {\r\n          linearLowerLimit?: XYZ\r\n          linearUpperLimit?: XYZ\r\n          angularLowerLimit?: XYZ\r\n          angularUpperLimit?: XYZ\r\n          center?: boolean\r\n          offset?: XYZ\r\n        },\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.dof(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies)\r\n    }\r\n  }\r\n\r\n  private getTransform(\r\n    bodyA: Ammo.btRigidBody,\r\n    bodyB: Ammo.btRigidBody,\r\n    offset: { x: number; y: number; z: number } = { x: 0, y: 0, z: 0 },\r\n    center: boolean = false\r\n  ) {\r\n    // @ts-ignore\r\n    offset = { x: 0, y: 0, z: 0, ...offset }\r\n\r\n    const centerVector = (v1: Ammo.btVector3, v2: Ammo.btVector3) => {\r\n      var dx = (v1.x() - v2.x()) / 2 + offset.x\r\n      var dy = (v1.y() - v2.y()) / 2 + offset.y\r\n      var dz = (v1.z() - v2.z()) / 2 + offset.z\r\n      return new Ammo.btVector3(dx, dy, dz)\r\n    }\r\n\r\n    const transformB = new Ammo.btTransform()\r\n    transformB.setIdentity()\r\n\r\n    if (!center) {\r\n      // offset\r\n      transformB.setOrigin(new Ammo.btVector3(offset.x, offset.y, offset.z))\r\n\r\n      const transformA = bodyA.getCenterOfMassTransform().inverse().op_mul(bodyB.getWorldTransform()).op_mul(transformB)\r\n\r\n      return { transformA: transformA, transformB: transformB }\r\n    } else {\r\n      const center = centerVector(bodyA.getWorldTransform().getOrigin(), bodyB.getWorldTransform().getOrigin())\r\n\r\n      const transformB = new Ammo.btTransform()\r\n      transformB.setIdentity()\r\n      transformB.setOrigin(center)\r\n\r\n      const transformA = bodyA.getCenterOfMassTransform().inverse().op_mul(bodyB.getWorldTransform())\r\n\r\n      transformA.op_mul(transformB)\r\n\r\n      return { transformA: transformA, transformB: transformB }\r\n    }\r\n  }\r\n\r\n  private lock(bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies = true) {\r\n    const zero = { x: 0, y: 0, z: 0 }\r\n    return this.dof(\r\n      bodyA,\r\n      bodyB,\r\n      { angularLowerLimit: zero, angularUpperLimit: zero },\r\n      disableCollisionsBetweenLinkedBodies\r\n    )\r\n  }\r\n\r\n  private fixed(bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies = true) {\r\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo)\r\n    transform.transformA.setRotation(bodyA.ammo.getWorldTransform().getRotation())\r\n    transform.transformB.setRotation(bodyB.ammo.getWorldTransform().getRotation())\r\n    const constraint = new Ammo.btFixedConstraint(bodyA.ammo, bodyB.ammo, transform.transformA, transform.transformB)\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n    return constraint\r\n  }\r\n\r\n  private pointToPoint(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      pivotA?: XYZ\r\n      pivotB?: XYZ\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const { pivotA, pivotB } = config\r\n    const pivotV3 = new Ammo.btVector3(pivotA?.x || 0, pivotA?.y || 0, pivotA?.z || 0)\r\n    const targetPivotV3 = new Ammo.btVector3(pivotB?.x || 0, pivotB?.y || 0, pivotB?.z || 0)\r\n    const constraint = new Ammo.btPoint2PointConstraint(bodyA.ammo, bodyB.ammo, pivotV3, targetPivotV3)\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n    return constraint\r\n  }\r\n\r\n  private hinge(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      pivotA?: XYZ\r\n      pivotB?: XYZ\r\n      axisA?: XYZ\r\n      axisB?: XYZ\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const { pivotA, pivotB, axisA, axisB } = config\r\n    const pivotV3 = new Ammo.btVector3(pivotA?.x || 0, pivotA?.y || 0, pivotA?.z || 0)\r\n    const targetPivotV3 = new Ammo.btVector3(pivotB?.x || 0, pivotB?.y || 0, pivotB?.z || 0)\r\n    const axisV3 = new Ammo.btVector3(axisA?.x || 0, axisA?.y || 0, axisA?.z || 0)\r\n    const targetAxisV3 = new Ammo.btVector3(axisB?.x || 0, axisB?.y || 0, axisB?.z || 0)\r\n    const constraint = new Ammo.btHingeConstraint(\r\n      bodyA.ammo,\r\n      bodyB.ammo,\r\n      pivotV3,\r\n      targetPivotV3,\r\n      axisV3,\r\n      targetAxisV3,\r\n      true\r\n    )\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n    return constraint\r\n  }\r\n\r\n  // https://pybullet.org/Bullet/phpBB3/viewtopic.php?f=9&t=12690&p=42152&hilit=btSliderConstraint#p42152\r\n  private slider(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      frameA?: XYZ\r\n      frameB?: XYZ\r\n      linearLowerLimit?: number\r\n      linearUpperLimit?: number\r\n      angularLowerLimit?: number\r\n      angularUpperLimit?: number\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo)\r\n\r\n    const {\r\n      frameA = {},\r\n      frameB = {},\r\n      linearLowerLimit: lll = 0,\r\n      linearUpperLimit: lul = 0,\r\n      angularLowerLimit: all = 0,\r\n      angularUpperLimit: aul = 0\r\n    } = config\r\n\r\n    const rotationA = transform.transformA.getRotation()\r\n    rotationA.setEulerZYX(frameA.x || 0, frameA.y || 0, frameA.z || 0)\r\n    transform.transformA.setRotation(rotationA)\r\n\r\n    const rotationB = transform.transformB.getRotation()\r\n    rotationB.setEulerZYX(frameB.x || 0, frameB.y || 0, frameB.z || 0)\r\n    transform.transformB.setRotation(rotationB)\r\n\r\n    const constraint = new Ammo.btSliderConstraint(\r\n      bodyA.ammo,\r\n      bodyB.ammo,\r\n      transform.transformA,\r\n      transform.transformB,\r\n      true\r\n    )\r\n\r\n    constraint.setLowerLinLimit(lll)\r\n    constraint.setUpperLinLimit(lul)\r\n    constraint.setLowerAngLimit(all)\r\n    constraint.setUpperAngLimit(aul)\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n    return constraint\r\n  }\r\n\r\n  private spring(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      stiffness?: number\r\n      damping?: number\r\n      angularLock?: boolean\r\n      linearLowerLimit?: XYZ\r\n      linearUpperLimit?: XYZ\r\n      angularLowerLimit?: XYZ\r\n      angularUpperLimit?: XYZ\r\n      center?: boolean\r\n      offset?: XYZ\r\n      enableSpring?: boolean\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const {\r\n      stiffness = 50,\r\n      damping = 0.01,\r\n      angularLock = false,\r\n      linearLowerLimit: lll = {},\r\n      linearUpperLimit: lul = {},\r\n      angularLowerLimit: all = {},\r\n      angularUpperLimit: aul = {},\r\n      offset = {},\r\n      center = false,\r\n      enableSpring = true\r\n    } = config\r\n\r\n    const off = { x: 0, y: 0, z: 0, ...offset }\r\n\r\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo, off, center)\r\n    const constraint = new Ammo.btGeneric6DofSpringConstraint(\r\n      bodyA.ammo,\r\n      bodyB.ammo,\r\n      transform.transformA,\r\n      transform.transformB,\r\n      true\r\n    )\r\n\r\n    this.tmpBtVector3.setValue(lll.x || 0, lll.y || 0, lll.z || 0)\r\n    constraint.setLinearLowerLimit(this.tmpBtVector3)\r\n\r\n    this.tmpBtVector3.setValue(lul.x || 0, lul.y || 0, lul.z || 0)\r\n    constraint.setLinearUpperLimit(this.tmpBtVector3)\r\n\r\n    if (angularLock) {\r\n      this.tmpBtVector3.setValue(0, 0, 0)\r\n      constraint.setAngularLowerLimit(this.tmpBtVector3)\r\n      constraint.setAngularUpperLimit(this.tmpBtVector3)\r\n    } else {\r\n      console.log(all, aul)\r\n      constraint.setAngularLowerLimit(this.toAmmoV3(all, -Math.PI))\r\n      constraint.setAngularUpperLimit(this.toAmmoV3(aul, Math.PI))\r\n    }\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      constraint.enableSpring(i, enableSpring)\r\n      constraint.setStiffness(i, stiffness)\r\n      constraint.setDamping(i, damping)\r\n    }\r\n\r\n    // I have no idea what setEquilibriumPoint does :/\r\n    // constraint.setEquilibriumPoint()\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n\r\n    return constraint\r\n  }\r\n\r\n  private coneTwist(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: { frameA: XYZ; frameB: XYZ },\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const { frameA, frameB } = config\r\n\r\n    const rbAFrame = new Ammo.btTransform()\r\n    rbAFrame.setIdentity()\r\n    rbAFrame.getOrigin().setValue(frameA?.x || 0, frameA?.y || 0, frameA?.z || 0)\r\n\r\n    const rbBFrame = new Ammo.btTransform()\r\n    rbBFrame.setIdentity()\r\n    rbBFrame.getOrigin().setValue(frameB?.x || 0, frameB?.y || 0, frameB?.z || 0)\r\n\r\n    const t = this.getTransform(bodyA.ammo, bodyB.ammo)\r\n\r\n    const constraint = new Ammo.btConeTwistConstraint(bodyB.ammo, bodyA.ammo, rbAFrame, rbBFrame)\r\n\r\n    // does not work at all :/\r\n    // constraint.setLimit(-Math.PI / 50, Math.PI / 50)\r\n\r\n    constraint.setAngularOnly(true)\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n\r\n    return constraint\r\n  }\r\n\r\n  private dof(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      linearLowerLimit?: XYZ\r\n      linearUpperLimit?: XYZ\r\n      angularLowerLimit?: XYZ\r\n      angularUpperLimit?: XYZ\r\n      center?: boolean\r\n      offset?: XYZ\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const { offset, center = false } = config\r\n    const off = { x: 0, y: 0, z: 0, ...offset }\r\n\r\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo, off, center)\r\n\r\n    const constraint = new Ammo.btGeneric6DofConstraint(\r\n      bodyA.ammo,\r\n      bodyB.ammo,\r\n      transform.transformA,\r\n      transform.transformB,\r\n      true\r\n    )\r\n\r\n    const { linearLowerLimit, linearUpperLimit, angularLowerLimit, angularUpperLimit } = config\r\n\r\n    const lll = this.toAmmoV3(linearLowerLimit)\r\n    const lul = this.toAmmoV3(linearUpperLimit)\r\n    const all = this.toAmmoV3(angularLowerLimit, -Math.PI)\r\n    const aul = this.toAmmoV3(angularUpperLimit, Math.PI)\r\n\r\n    constraint.setLinearLowerLimit(lll)\r\n    constraint.setLinearUpperLimit(lul)\r\n    constraint.setAngularLowerLimit(all)\r\n    constraint.setAngularUpperLimit(aul)\r\n\r\n    Ammo.destroy(lll)\r\n    Ammo.destroy(lul)\r\n    Ammo.destroy(all)\r\n    Ammo.destroy(aul)\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n\r\n    return constraint\r\n  }\r\n}\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @description  This is a modified version of the original code from Kevin Lee\r\n * (Includes latest three-to-ammo commit from August 6, 2020)\r\n */\r\n\r\n/**\r\n * @author       Kevin Lee (https://github.com/InfiniteLee)\r\n * @copyright    Copyright (c) 2020 Kevin Lee; Project Url: https://github.com/InfiniteLee/three-to-ammo\r\n * @license      {@link https://github.com/InfiniteLee/three-to-ammo/blob/master/LICENSE|MPL-2.0}\r\n */\r\n\r\nimport { Vector3, Matrix4, Quaternion, Box3, REVISION } from 'three'\r\n;('use strict')\r\n/* global Ammo */\r\n\r\nexport const TYPE = {\r\n  BOX: 'box',\r\n  CYLINDER: 'cylinder',\r\n  SPHERE: 'sphere',\r\n  CAPSULE: 'capsule',\r\n  CONE: 'cone',\r\n  HULL: 'hull',\r\n  HACD: 'hacd', //Hierarchical Approximate Convex Decomposition\r\n  VHACD: 'vhacd', //Volumetric Hierarchical Approximate Convex Decomposition\r\n  MESH: 'mesh',\r\n  HEIGHTFIELD: 'heightfield'\r\n}\r\n\r\nexport const FIT = {\r\n  ALL: 'all', //A single shape is automatically sized to bound all meshes within the entity.\r\n  MANUAL: 'manual' //A single shape is sized manually. Requires halfExtents or sphereRadius.\r\n}\r\n\r\nexport const HEIGHTFIELD_DATA_TYPE = {\r\n  short: 'short',\r\n  float: 'float'\r\n}\r\n\r\nexport const createCollisionShapes = function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n  switch (options.type) {\r\n    case TYPE.BOX:\r\n      return [createBoxShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.CYLINDER:\r\n      return [createCylinderShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.CAPSULE:\r\n      return [createCapsuleShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.CONE:\r\n      return [createConeShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.SPHERE:\r\n      return [createSphereShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.HULL:\r\n      return [createHullShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.HACD:\r\n      return createHACDShapes(vertices, matrices, indexes, matrixWorld, options)\r\n    case TYPE.VHACD:\r\n      return createVHACDShapes(vertices, matrices, indexes, matrixWorld, options)\r\n    case TYPE.MESH:\r\n      return [createTriMeshShape(vertices, matrices, indexes, matrixWorld, options)]\r\n    case TYPE.HEIGHTFIELD:\r\n      return [createHeightfieldTerrainShape(options)]\r\n    default:\r\n      console.warn(options.type + ' is not currently supported')\r\n      return []\r\n  }\r\n}\r\n\r\n//TODO: support gimpact (dynamic trimesh) and heightmap\r\n\r\nexport const createBoxShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.BOX\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z)\r\n  const collisionShape = new Ammo.btBoxShape(btHalfExtents)\r\n  Ammo.destroy(btHalfExtents)\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createCylinderShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.CYLINDER\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z)\r\n  const collisionShape = (() => {\r\n    switch (options.cylinderAxis) {\r\n      case 'y':\r\n        return new Ammo.btCylinderShape(btHalfExtents)\r\n      case 'x':\r\n        return new Ammo.btCylinderShapeX(btHalfExtents)\r\n      case 'z':\r\n        return new Ammo.btCylinderShapeZ(btHalfExtents)\r\n    }\r\n    return null\r\n  })()\r\n  Ammo.destroy(btHalfExtents)\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createCapsuleShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.CAPSULE\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const { x, y, z } = options.halfExtents\r\n  const collisionShape = (() => {\r\n    switch (options.cylinderAxis) {\r\n      case 'y':\r\n        return new Ammo.btCapsuleShape(Math.max(x, z), y * 2)\r\n      case 'x':\r\n        return new Ammo.btCapsuleShapeX(Math.max(y, z), x * 2)\r\n      case 'z':\r\n        return new Ammo.btCapsuleShapeZ(Math.max(x, y), z * 2)\r\n    }\r\n    return null\r\n  })()\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createConeShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.CONE\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const { x, y, z } = options.halfExtents\r\n  const collisionShape = (() => {\r\n    switch (options.cylinderAxis) {\r\n      case 'y':\r\n        return new Ammo.btConeShape(Math.max(x, z), y * 2)\r\n      case 'x':\r\n        return new Ammo.btConeShapeX(Math.max(y, z), x * 2)\r\n      case 'z':\r\n        return new Ammo.btConeShapeZ(Math.max(x, y), z * 2)\r\n    }\r\n    return null\r\n  })()\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createSphereShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.SPHERE\r\n  _setOptions(options)\r\n\r\n  let radius\r\n  if (options.fit === FIT.MANUAL && !isNaN(options.sphereRadius)) {\r\n    radius = options.sphereRadius\r\n  } else {\r\n    radius = _computeRadius(vertices, matrices, _computeBounds(vertices, matrices))\r\n  }\r\n\r\n  const collisionShape = new Ammo.btSphereShape(radius)\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n\r\n  return collisionShape\r\n}\r\n\r\nexport const createHullShape = (function () {\r\n  const vertex = new Vector3()\r\n  const center = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, matrixWorld, options = {}) {\r\n    options.type = TYPE.HULL\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: hull')\r\n      return null\r\n    }\r\n\r\n    const bounds = _computeBounds(vertices, matrices)\r\n\r\n    const btVertex = new Ammo.btVector3()\r\n    const originalHull = new Ammo.btConvexHullShape()\r\n    originalHull.setMargin(options.margin)\r\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\r\n\r\n    let vertexCount = 0\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      vertexCount += vertices[i].length / 3\r\n    }\r\n\r\n    const maxVertices = options.hullMaxVertices || 100000\r\n    // todo: might want to implement this in a deterministic way that doesn't do O(verts) calls to Math.random\r\n    if (vertexCount > maxVertices) {\r\n      console.warn(`too many vertices for hull shape; sampling ~${maxVertices} from ~${vertexCount} vertices`)\r\n    }\r\n    const p = Math.min(1, maxVertices / vertexCount)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < components.length; j += 3) {\r\n        const isLastVertex = i === vertices.length - 1 && j === components.length - 3\r\n        if (Math.random() <= p || isLastVertex) {\r\n          // always include the last vertex\r\n          vertex\r\n            .set(components[j], components[j + 1], components[j + 2])\r\n            .applyMatrix4(matrix)\r\n            .sub(center)\r\n          btVertex.setValue(vertex.x, vertex.y, vertex.z)\r\n          originalHull.addPoint(btVertex, isLastVertex) // recalc AABB only on last geometry\r\n        }\r\n      }\r\n    }\r\n\r\n    let collisionShape = originalHull\r\n    if (originalHull.getNumVertices() >= 100) {\r\n      //Bullet documentation says don't use convexHulls with 100 verts or more\r\n      const shapeHull = new Ammo.btShapeHull(originalHull)\r\n      shapeHull.buildHull(options.margin)\r\n      Ammo.destroy(originalHull)\r\n      collisionShape = new Ammo.btConvexHullShape(\r\n        Ammo.getPointer(shapeHull.getVertexPointer()),\r\n        shapeHull.numVertices()\r\n      )\r\n      Ammo.destroy(shapeHull) // btConvexHullShape makes a copy\r\n    }\r\n\r\n    Ammo.destroy(btVertex)\r\n\r\n    _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n    return collisionShape\r\n  }\r\n})()\r\n\r\nexport const createHACDShapes = (function () {\r\n  const vector = new Vector3()\r\n  const center = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n    options.type = TYPE.HACD\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: hacd')\r\n      return []\r\n    }\r\n\r\n    if (!Ammo.hasOwnProperty('HACD')) {\r\n      console.warn(\r\n        'HACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.'\r\n      )\r\n      return []\r\n    }\r\n\r\n    const bounds = _computeBounds(vertices, matrices)\r\n    const scale = _computeScale(matrixWorld, options)\r\n\r\n    let vertexCount = 0\r\n    let triCount = 0\r\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      vertexCount += vertices[i].length / 3\r\n      if (indexes && indexes[i]) {\r\n        triCount += indexes[i].length / 3\r\n      } else {\r\n        triCount += vertices[i].length / 9\r\n      }\r\n    }\r\n\r\n    const hacd = new Ammo.HACD()\r\n    if (options.hasOwnProperty('compacityWeight')) hacd.SetCompacityWeight(options.compacityWeight)\r\n    if (options.hasOwnProperty('volumeWeight')) hacd.SetVolumeWeight(options.volumeWeight)\r\n    if (options.hasOwnProperty('nClusters')) hacd.SetNClusters(options.nClusters)\r\n    if (options.hasOwnProperty('nVerticesPerCH')) hacd.SetNVerticesPerCH(options.nVerticesPerCH)\r\n    if (options.hasOwnProperty('concavity')) hacd.SetConcavity(options.concavity)\r\n\r\n    const points = Ammo._malloc(vertexCount * 3 * 8)\r\n    const triangles = Ammo._malloc(triCount * 3 * 4)\r\n    hacd.SetPoints(points)\r\n    hacd.SetTriangles(triangles)\r\n    hacd.SetNPoints(vertexCount)\r\n    hacd.SetNTriangles(triCount)\r\n\r\n    let pptr = points / 8,\r\n      tptr = triangles / 4\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < components.length; j += 3) {\r\n        vector\r\n          .set(components[j + 0], components[j + 1], components[j + 2])\r\n          .applyMatrix4(matrix)\r\n          .sub(center)\r\n        Ammo.HEAPF64[pptr + 0] = vector.x\r\n        Ammo.HEAPF64[pptr + 1] = vector.y\r\n        Ammo.HEAPF64[pptr + 2] = vector.z\r\n        pptr += 3\r\n      }\r\n      if (indexes[i]) {\r\n        const indices = indexes[i]\r\n        for (let j = 0; j < indices.length; j++) {\r\n          Ammo.HEAP32[tptr] = indices[j]\r\n          tptr++\r\n        }\r\n      } else {\r\n        for (let j = 0; j < components.length / 3; j++) {\r\n          Ammo.HEAP32[tptr] = j\r\n          tptr++\r\n        }\r\n      }\r\n    }\r\n\r\n    hacd.Compute()\r\n    Ammo._free(points)\r\n    Ammo._free(triangles)\r\n    const nClusters = hacd.GetNClusters()\r\n\r\n    const shapes = []\r\n    for (let i = 0; i < nClusters; i++) {\r\n      const hull = new Ammo.btConvexHullShape()\r\n      hull.setMargin(options.margin)\r\n      const nPoints = hacd.GetNPointsCH(i)\r\n      const nTriangles = hacd.GetNTrianglesCH(i)\r\n      const hullPoints = Ammo._malloc(nPoints * 3 * 8)\r\n      const hullTriangles = Ammo._malloc(nTriangles * 3 * 4)\r\n      hacd.GetCH(i, hullPoints, hullTriangles)\r\n\r\n      const pptr = hullPoints / 8\r\n      for (let pi = 0; pi < nPoints; pi++) {\r\n        const btVertex = new Ammo.btVector3()\r\n        const px = Ammo.HEAPF64[pptr + pi * 3 + 0]\r\n        const py = Ammo.HEAPF64[pptr + pi * 3 + 1]\r\n        const pz = Ammo.HEAPF64[pptr + pi * 3 + 2]\r\n        btVertex.setValue(px, py, pz)\r\n        hull.addPoint(btVertex, pi === nPoints - 1)\r\n        Ammo.destroy(btVertex)\r\n      }\r\n\r\n      _finishCollisionShape(hull, options, scale)\r\n      shapes.push(hull)\r\n    }\r\n\r\n    return shapes\r\n  }\r\n})()\r\n\r\nexport const createVHACDShapes = (function () {\r\n  const vector = new Vector3()\r\n  const center = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n    options.type = TYPE.VHACD\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: vhacd')\r\n      return []\r\n    }\r\n\r\n    if (!Ammo.hasOwnProperty('VHACD')) {\r\n      console.warn(\r\n        'VHACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.'\r\n      )\r\n      return []\r\n    }\r\n\r\n    const bounds = _computeBounds(vertices, matrices)\r\n    const scale = _computeScale(matrixWorld, options)\r\n\r\n    let vertexCount = 0\r\n    let triCount = 0\r\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      vertexCount += vertices[i].length / 3\r\n      if (indexes && indexes[i]) {\r\n        triCount += indexes[i].length / 3\r\n      } else {\r\n        triCount += vertices[i].length / 9\r\n      }\r\n    }\r\n\r\n    const vhacd = new Ammo.VHACD()\r\n    const params = new Ammo.Parameters()\r\n    //https://kmamou.blogspot.com/2014/12/v-hacd-20-parameters-description.html\r\n    if (options.hasOwnProperty('resolution')) params.set_m_resolution(options.resolution)\r\n    if (options.hasOwnProperty('depth')) params.set_m_depth(options.depth)\r\n    if (options.hasOwnProperty('concavity')) params.set_m_concavity(options.concavity)\r\n    if (options.hasOwnProperty('planeDownsampling')) params.set_m_planeDownsampling(options.planeDownsampling)\r\n    if (options.hasOwnProperty('convexhullDownsampling'))\r\n      params.set_m_convexhullDownsampling(options.convexhullDownsampling)\r\n    if (options.hasOwnProperty('alpha')) params.set_m_alpha(options.alpha)\r\n    if (options.hasOwnProperty('beta')) params.set_m_beta(options.beta)\r\n    if (options.hasOwnProperty('gamma')) params.set_m_gamma(options.gamma)\r\n    if (options.hasOwnProperty('pca')) params.set_m_pca(options.pca)\r\n    if (options.hasOwnProperty('mode')) params.set_m_mode(options.mode)\r\n    if (options.hasOwnProperty('maxNumVerticesPerCH')) params.set_m_maxNumVerticesPerCH(options.maxNumVerticesPerCH)\r\n    if (options.hasOwnProperty('minVolumePerCH')) params.set_m_minVolumePerCH(options.minVolumePerCH)\r\n    if (options.hasOwnProperty('convexhullApproximation'))\r\n      params.set_m_convexhullApproximation(options.convexhullApproximation)\r\n    if (options.hasOwnProperty('oclAcceleration')) params.set_m_oclAcceleration(options.oclAcceleration)\r\n\r\n    const points = Ammo._malloc(vertexCount * 3 * 8 + 3)\r\n    const triangles = Ammo._malloc(triCount * 3 * 4)\r\n\r\n    let pptr = points / 8,\r\n      tptr = triangles / 4\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < components.length; j += 3) {\r\n        vector\r\n          .set(components[j + 0], components[j + 1], components[j + 2])\r\n          .applyMatrix4(matrix)\r\n          .sub(center)\r\n        Ammo.HEAPF64[pptr + 0] = vector.x\r\n        Ammo.HEAPF64[pptr + 1] = vector.y\r\n        Ammo.HEAPF64[pptr + 2] = vector.z\r\n        pptr += 3\r\n      }\r\n      if (indexes[i]) {\r\n        const indices = indexes[i]\r\n        for (let j = 0; j < indices.length; j++) {\r\n          Ammo.HEAP32[tptr] = indices[j]\r\n          tptr++\r\n        }\r\n      } else {\r\n        for (let j = 0; j < components.length / 3; j++) {\r\n          Ammo.HEAP32[tptr] = j\r\n          tptr++\r\n        }\r\n      }\r\n    }\r\n    vhacd.Compute(points, 3, vertexCount, triangles, 3, triCount, params)\r\n    Ammo._free(points)\r\n    Ammo._free(triangles)\r\n    const nHulls = vhacd.GetNConvexHulls()\r\n\r\n    const shapes = []\r\n    const ch = new Ammo.ConvexHull()\r\n    for (let i = 0; i < nHulls; i++) {\r\n      vhacd.GetConvexHull(i, ch)\r\n      const nPoints = ch.get_m_nPoints()\r\n      const hullPoints = ch.get_m_points()\r\n\r\n      const hull = new Ammo.btConvexHullShape()\r\n      hull.setMargin(options.margin)\r\n\r\n      for (let pi = 0; pi < nPoints; pi++) {\r\n        const btVertex = new Ammo.btVector3()\r\n        const px = ch.get_m_points(pi * 3 + 0)\r\n        const py = ch.get_m_points(pi * 3 + 1)\r\n        const pz = ch.get_m_points(pi * 3 + 2)\r\n        btVertex.setValue(px, py, pz)\r\n        hull.addPoint(btVertex, pi === nPoints - 1)\r\n        Ammo.destroy(btVertex)\r\n      }\r\n\r\n      _finishCollisionShape(hull, options, scale)\r\n      shapes.push(hull)\r\n    }\r\n    Ammo.destroy(ch)\r\n    Ammo.destroy(vhacd)\r\n\r\n    return shapes\r\n  }\r\n})()\r\n\r\nexport const createTriMeshShape = (function () {\r\n  const va = new Vector3()\r\n  const vb = new Vector3()\r\n  const vc = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n    options.type = TYPE.MESH\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: mesh')\r\n      return null\r\n    }\r\n\r\n    const scale = _computeScale(matrixWorld, options)\r\n\r\n    const bta = new Ammo.btVector3()\r\n    const btb = new Ammo.btVector3()\r\n    const btc = new Ammo.btVector3()\r\n    const triMesh = new Ammo.btTriangleMesh(true, false)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      const index = indexes[i] ? indexes[i] : null\r\n      matrix.fromArray(matrices[i])\r\n      if (index) {\r\n        for (let j = 0; j < index.length; j += 3) {\r\n          const ai = index[j] * 3\r\n          const bi = index[j + 1] * 3\r\n          const ci = index[j + 2] * 3\r\n          va.set(components[ai], components[ai + 1], components[ai + 2]).applyMatrix4(matrix)\r\n          vb.set(components[bi], components[bi + 1], components[bi + 2]).applyMatrix4(matrix)\r\n          vc.set(components[ci], components[ci + 1], components[ci + 2]).applyMatrix4(matrix)\r\n          bta.setValue(va.x, va.y, va.z)\r\n          btb.setValue(vb.x, vb.y, vb.z)\r\n          btc.setValue(vc.x, vc.y, vc.z)\r\n          triMesh.addTriangle(bta, btb, btc, false)\r\n        }\r\n      } else {\r\n        for (let j = 0; j < components.length; j += 9) {\r\n          va.set(components[j + 0], components[j + 1], components[j + 2]).applyMatrix4(matrix)\r\n          vb.set(components[j + 3], components[j + 4], components[j + 5]).applyMatrix4(matrix)\r\n          vc.set(components[j + 6], components[j + 7], components[j + 8]).applyMatrix4(matrix)\r\n          bta.setValue(va.x, va.y, va.z)\r\n          btb.setValue(vb.x, vb.y, vb.z)\r\n          btc.setValue(vc.x, vc.y, vc.z)\r\n          triMesh.addTriangle(bta, btb, btc, false)\r\n        }\r\n      }\r\n    }\r\n\r\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\r\n    triMesh.setScaling(localScale)\r\n    Ammo.destroy(localScale)\r\n\r\n    // MOD (yandeu): Use btConvexTriangleMeshShape for concave shapes\r\n    let collisionShape\r\n    if (options.concave) collisionShape = new Ammo.btBvhTriangleMeshShape(triMesh, true, true)\r\n    else collisionShape = new Ammo.btConvexTriangleMeshShape(triMesh, true)\r\n\r\n    // const collisionShape = new Ammo.btBvhTriangleMeshShape(triMesh, true, true)\r\n\r\n    collisionShape.resources = [triMesh]\r\n\r\n    Ammo.destroy(bta)\r\n    Ammo.destroy(btb)\r\n    Ammo.destroy(btc)\r\n\r\n    _finishCollisionShape(collisionShape, options)\r\n    return collisionShape\r\n  }\r\n})()\r\n\r\nexport const createHeightfieldTerrainShape = function (options = {}) {\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    console.warn('cannot use fit: all with type: heightfield')\r\n    return null\r\n  }\r\n  const heightfieldDistance = options.heightfieldDistance || 1\r\n  const heightfieldData = options.heightfieldData || []\r\n  const heightScale = options.heightScale || 0\r\n  const upAxis = options.hasOwnProperty('upAxis') ? options.upAxis : 1 // x = 0; y = 1; z = 2\r\n  const hdt = (() => {\r\n    switch (options.heightDataType) {\r\n      case 'short':\r\n        return Ammo.PHY_SHORT\r\n      case 'float':\r\n        return Ammo.PHY_FLOAT\r\n      default:\r\n        return Ammo.PHY_FLOAT\r\n    }\r\n  })()\r\n  const flipQuadEdges = options.hasOwnProperty('flipQuadEdges') ? options.flipQuadEdges : true\r\n\r\n  const heightStickLength = heightfieldData.length\r\n  const heightStickWidth = heightStickLength > 0 ? heightfieldData[0].length : 0\r\n\r\n  const data = Ammo._malloc(heightStickLength * heightStickWidth * 4)\r\n  const ptr = data / 4\r\n\r\n  let minHeight = Number.POSITIVE_INFINITY\r\n  let maxHeight = Number.NEGATIVE_INFINITY\r\n  let index = 0\r\n  for (let l = 0; l < heightStickLength; l++) {\r\n    for (let w = 0; w < heightStickWidth; w++) {\r\n      const height = heightfieldData[l][w]\r\n      Ammo.HEAPF32[ptr + index] = height\r\n      index++\r\n      minHeight = Math.min(minHeight, height)\r\n      maxHeight = Math.max(maxHeight, height)\r\n    }\r\n  }\r\n\r\n  const collisionShape = new Ammo.btHeightfieldTerrainShape(\r\n    heightStickWidth,\r\n    heightStickLength,\r\n    data,\r\n    heightScale,\r\n    minHeight,\r\n    maxHeight,\r\n    upAxis,\r\n    hdt,\r\n    flipQuadEdges\r\n  )\r\n\r\n  const scale = new Ammo.btVector3(heightfieldDistance, 1, heightfieldDistance)\r\n  collisionShape.setLocalScaling(scale)\r\n  Ammo.destroy(scale)\r\n\r\n  collisionShape.heightfieldData = data\r\n\r\n  _finishCollisionShape(collisionShape, options)\r\n  return collisionShape\r\n}\r\n\r\nfunction _setOptions(options) {\r\n  // MOD (yandeu): All of this will be done in physics.ts\r\n  // we only keep type and margin\r\n  options.type = options.type || TYPE.HULL\r\n  options.margin = options.hasOwnProperty('margin') ? options.margin : 0.01\r\n  return\r\n\r\n  options.fit = options.hasOwnProperty('fit') ? options.fit : FIT.ALL\r\n  options.type = options.type || TYPE.HULL\r\n  options.minHalfExtent = options.hasOwnProperty('minHalfExtent') ? options.minHalfExtent : 0\r\n  options.maxHalfExtent = options.hasOwnProperty('maxHalfExtent') ? options.maxHalfExtent : Number.POSITIVE_INFINITY\r\n  options.cylinderAxis = options.cylinderAxis || 'y'\r\n  options.margin = options.hasOwnProperty('margin') ? options.margin : 0.01\r\n  options.includeInvisible = options.hasOwnProperty('includeInvisible') ? options.includeInvisible : false\r\n\r\n  if (!options.offset) {\r\n    options.offset = new Vector3()\r\n  }\r\n\r\n  if (!options.orientation) {\r\n    options.orientation = new Quaternion()\r\n  }\r\n}\r\n\r\nconst _finishCollisionShape = function (collisionShape, options, scale) {\r\n  // MOD (yandeu): All of this will be done in physics.ts\r\n  return\r\n\r\n  collisionShape.type = options.type\r\n  collisionShape.setMargin(options.margin)\r\n  collisionShape.destroy = () => {\r\n    for (let res of collisionShape.resources || []) {\r\n      Ammo.destroy(res)\r\n    }\r\n    if (collisionShape.heightfieldData) {\r\n      Ammo._free(collisionShape.heightfieldData)\r\n    }\r\n    Ammo.destroy(collisionShape)\r\n  }\r\n\r\n  const localTransform = new Ammo.btTransform()\r\n  const rotation = new Ammo.btQuaternion()\r\n  localTransform.setIdentity()\r\n\r\n  localTransform.getOrigin().setValue(options.offset.x, options.offset.y, options.offset.z)\r\n  rotation.setValue(options.orientation.x, options.orientation.y, options.orientation.z, options.orientation.w)\r\n\r\n  localTransform.setRotation(rotation)\r\n  Ammo.destroy(rotation)\r\n\r\n  if (scale) {\r\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\r\n    collisionShape.setLocalScaling(localScale)\r\n    Ammo.destroy(localScale)\r\n  }\r\n\r\n  collisionShape.localTransform = localTransform\r\n}\r\n\r\nexport const iterateGeometries = (function () {\r\n  const inverse = new Matrix4()\r\n  return function (root, options, cb) {\r\n    // MOD (yandeu): Update to three.js r123\r\n    // compatibility fix for three.js >= r123 (Dezember 2020)\r\n    if (parseInt(REVISION) >= 123) inverse.copy(root.matrixWorld).invert()\r\n    else inverse.getInverse(root.matrixWorld)\r\n\r\n    const scale = new Vector3()\r\n    scale.setFromMatrixScale(root.matrixWorld)\r\n    root.traverse(mesh => {\r\n      const transform = new Matrix4()\r\n      if (\r\n        mesh.isMesh &&\r\n        // MOD (yandeu): No need to check if name is 'Sky'\r\n        // mesh.name !== 'Sky' &&\r\n        (options.includeInvisible || (mesh.el && mesh.el.object3D.visible) || mesh.visible)\r\n      ) {\r\n        if (mesh === root) {\r\n          transform.identity()\r\n        } else {\r\n          mesh.updateWorldMatrix(true)\r\n          transform.multiplyMatrices(inverse, mesh.matrixWorld)\r\n        }\r\n        // todo: might want to return null xform if this is the root so that callers can avoid multiplying\r\n        // things by the identity matrix\r\n        cb(\r\n          mesh.geometry.isBufferGeometry ? mesh.geometry.attributes.position.array : mesh.geometry.vertices,\r\n          transform.elements,\r\n          mesh.geometry.index ? mesh.geometry.index.array : null\r\n        )\r\n      }\r\n    })\r\n  }\r\n})()\r\n\r\nconst _computeScale = (function () {\r\n  const matrix = new Matrix4()\r\n  return function (matrixWorld, options = {}) {\r\n    const scale = new Vector3(1, 1, 1)\r\n    if (options.fit === FIT.ALL) {\r\n      matrix.fromArray(matrixWorld)\r\n      scale.setFromMatrixScale(matrix)\r\n    }\r\n    return scale\r\n  }\r\n})()\r\n\r\nconst _computeRadius = (function () {\r\n  const center = new Vector3()\r\n  return function (vertices, matrices, bounds) {\r\n    let maxRadiusSq = 0\r\n    let { x: cx, y: cy, z: cz } = bounds.getCenter(center)\r\n\r\n    _iterateVertices(vertices, matrices, v => {\r\n      const dx = cx - v.x\r\n      const dy = cy - v.y\r\n      const dz = cz - v.z\r\n      maxRadiusSq = Math.max(maxRadiusSq, dx * dx + dy * dy + dz * dz)\r\n    })\r\n    return Math.sqrt(maxRadiusSq)\r\n  }\r\n})()\r\n\r\nconst _computeHalfExtents = function (bounds, minHalfExtent, maxHalfExtent) {\r\n  const halfExtents = new Vector3()\r\n  return halfExtents.subVectors(bounds.max, bounds.min).multiplyScalar(0.5).clampScalar(minHalfExtent, maxHalfExtent)\r\n}\r\n\r\nconst _computeLocalOffset = function (matrix, bounds, target) {\r\n  target.addVectors(bounds.max, bounds.min).multiplyScalar(0.5).applyMatrix4(matrix)\r\n  return target\r\n}\r\n\r\n// returns the bounding box for the geometries underneath `root`.\r\nconst _computeBounds = function (vertices, matrices) {\r\n  const bounds = new Box3()\r\n  let minX = +Infinity\r\n  let minY = +Infinity\r\n  let minZ = +Infinity\r\n  let maxX = -Infinity\r\n  let maxY = -Infinity\r\n  let maxZ = -Infinity\r\n  bounds.min.set(0, 0, 0)\r\n  bounds.max.set(0, 0, 0)\r\n\r\n  _iterateVertices(vertices, matrices, v => {\r\n    if (v.x < minX) minX = v.x\r\n    if (v.y < minY) minY = v.y\r\n    if (v.z < minZ) minZ = v.z\r\n    if (v.x > maxX) maxX = v.x\r\n    if (v.y > maxY) maxY = v.y\r\n    if (v.z > maxZ) maxZ = v.z\r\n  })\r\n\r\n  bounds.min.set(minX, minY, minZ)\r\n  bounds.max.set(maxX, maxY, maxZ)\r\n  return bounds\r\n}\r\n\r\nconst _iterateVertices = (function () {\r\n  const vertex = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, cb) {\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < vertices[i].length; j += 3) {\r\n        vertex.set(vertices[i][j], vertices[i][j + 1], vertices[i][j + 2]).applyMatrix4(matrix)\r\n        cb(vertex)\r\n      }\r\n    }\r\n  }\r\n})()\r\n","import { MeshLambertMaterial } from 'three';\r\nclass DefaultMaterial {\r\n    constructor() {\r\n        this._defaultMaterial = new MeshLambertMaterial({ color: 0xcccccc });\r\n    }\r\n    get() {\r\n        return this._defaultMaterial;\r\n    }\r\n}\r\nexport default DefaultMaterial;\r\n//# sourceMappingURL=defaultMaterial.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { BoxBufferGeometry, ConeBufferGeometry, CylinderBufferGeometry, DoubleSide, ExtrudeBufferGeometry, Line, LineBasicMaterial, MeshBasicMaterial, MeshLambertMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, PlaneBufferGeometry, Points, PointsMaterial, SphereBufferGeometry, MathUtils as THREE_Math, TorusBufferGeometry } from 'three';\r\nimport { ExtendedMesh } from './extendedMesh';\r\nimport { logger } from './logger';\r\nimport DefaultMaterial from './defaultMaterial';\r\nexport default class Factories {\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n        this.isHeadless = scene === 'headless' ? true : false;\r\n        this.defaultMaterial = new DefaultMaterial();\r\n    }\r\n    get make() {\r\n        return {\r\n            plane: (planeConfig = {}, materialConfig = {}) => this.makePlane(planeConfig, materialConfig),\r\n            box: (boxConfig = {}, materialConfig = {}) => this.makeBox(boxConfig, materialConfig),\r\n            sphere: (sphereConfig = {}, materialConfig = {}) => this.makeSphere(sphereConfig, materialConfig),\r\n            cylinder: (cylinderConfig = {}, materialConfig = {}) => this.makeCylinder(cylinderConfig, materialConfig),\r\n            cone: (coneConfig = {}, materialConfig = {}) => this.makeCone(coneConfig, materialConfig),\r\n            torus: (torusConfig = {}, materialConfig = {}) => this.makeTorus(torusConfig, materialConfig),\r\n            extrude: (extrudeConfig, materialConfig = {}) => this.makeExtrude(extrudeConfig, materialConfig)\r\n        };\r\n    }\r\n    get add() {\r\n        return {\r\n            // effectComposer: () => this.addEffectComposer(),\r\n            mesh: (mesh) => this.addMesh(mesh),\r\n            // group: (...children) => this.addGroup(children),\r\n            existing: (object) => this.addExisting(object),\r\n            //  Geometry\r\n            plane: (planeConfig = {}, materialConfig = {}) => this.addPlane(planeConfig, materialConfig),\r\n            box: (boxConfig = {}, materialConfig = {}) => this.addBox(boxConfig, materialConfig),\r\n            ground: (groundConfig, materialConfig = {}) => this.addGround(groundConfig, materialConfig),\r\n            //...\r\n            sphere: (sphereConfig = {}, materialConfig = {}) => this.addSphere(sphereConfig, materialConfig),\r\n            cylinder: (cylinderConfig = {}, materialConfig = {}) => this.addCylinder(cylinderConfig, materialConfig),\r\n            cone: (coneConfig = {}, materialConfig = {}) => this.addCone(coneConfig, materialConfig),\r\n            torus: (torusConfig = {}, materialConfig = {}) => this.addTorus(torusConfig, materialConfig),\r\n            extrude: (extrudeConfig, materialConfig = {}) => this.addExtrude(extrudeConfig, materialConfig),\r\n            //...\r\n            material: (materialConfig = {}) => this.addMaterial(materialConfig)\r\n        };\r\n    }\r\n    addExisting(...object) {\r\n        if (this.scene === 'headless')\r\n            return;\r\n        this.scene.add(...object);\r\n    }\r\n    addMesh(mesh) {\r\n        if (Array.isArray(mesh)) {\r\n            for (let i = 0; i < mesh.length; i++) {\r\n                this.addExisting(mesh[i]);\r\n            }\r\n        }\r\n        else {\r\n            this.addExisting(mesh);\r\n        }\r\n        return this;\r\n    }\r\n    createMesh(geometry, material, position) {\r\n        const { x = 0, y = 0, z = 0 } = position;\r\n        let obj;\r\n        switch (!Array.isArray(material) && material.type) {\r\n            case 'LineBasicMaterial':\r\n                obj = new Line(geometry, material);\r\n                break;\r\n            case 'PointsMaterial':\r\n                obj = new Points(geometry, material);\r\n                break;\r\n            default:\r\n                obj = new ExtendedMesh(geometry, material);\r\n                break;\r\n        }\r\n        obj.position.set(x, y, z);\r\n        obj.castShadow = obj.receiveShadow = true;\r\n        return obj;\r\n    }\r\n    makeExtrude(extrudeConfig, materialConfig) {\r\n        const { x, y, z, name, shape, autoCenter = true, breakable = false } = extrudeConfig, rest = __rest(extrudeConfig\r\n        // @ts-ignore // ExtrudeGeometryOptions interface missing since three.js r121\r\n        , [\"x\", \"y\", \"z\", \"name\", \"shape\", \"autoCenter\", \"breakable\"]);\r\n        // @ts-ignore // ExtrudeGeometryOptions interface missing since three.js r121\r\n        const { depth = 1, bevelEnabled = false } = rest;\r\n        const geometry = new ExtrudeBufferGeometry(shape, Object.assign({ depth, bevelEnabled }, rest));\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        // auto adjust the center for custom shapes\r\n        if (autoCenter)\r\n            mesh.geometry.center();\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'extrude';\r\n        return mesh;\r\n    }\r\n    addExtrude(extrudeConfig, materialConfig = {}) {\r\n        const obj = this.makeExtrude(extrudeConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makePlane(planeConfig, materialConfig) {\r\n        const { x, y, z, name, breakable = false } = planeConfig, rest = __rest(planeConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new PlaneBufferGeometry(rest.width || 1, rest.height || 1, rest.widthSegments || 1, rest.heightSegments || 1);\r\n        const material = this.addMaterial(materialConfig);\r\n        material.side = DoubleSide;\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'plane';\r\n        return mesh;\r\n    }\r\n    addPlane(planeConfig, materialConfig) {\r\n        const obj = this.makePlane(planeConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeSphere(sphereConfig, materialConfig) {\r\n        const { x, y, z, name, breakable = false } = sphereConfig, rest = __rest(sphereConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new SphereBufferGeometry(rest.radius || 1, rest.widthSegments || 16, rest.heightSegments || 12, rest.phiStart || undefined, rest.phiLength || undefined, rest.thetaStart || undefined, rest.thetaLength || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'sphere';\r\n        return mesh;\r\n    }\r\n    addSphere(sphereConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeSphere(sphereConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeBox(boxConfig, materialConfig) {\r\n        const { x, y, z, name, breakable = false } = boxConfig, rest = __rest(boxConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new BoxBufferGeometry(rest.width || 1, rest.height || 1, rest.depth || 1, rest.widthSegments || undefined, rest.heightSegments || undefined, rest.depthSegments || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'box';\r\n        return mesh;\r\n    }\r\n    addBox(boxConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeBox(boxConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    addGround(groundConfig, materialConfig = {}) {\r\n        const obj = this.makeBox(groundConfig, materialConfig);\r\n        obj.rotateX(THREE_Math.degToRad(90));\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeCylinder(cylinderConfig = {}, materialConfig = {}) {\r\n        const { x, y, z, name, breakable = false } = cylinderConfig, rest = __rest(cylinderConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new CylinderBufferGeometry(rest.radiusTop || 1, rest.radiusBottom || 1, rest.height || 1, rest.radiusSegments || undefined, rest.heightSegments || undefined, rest.openEnded || undefined, rest.thetaStart || undefined, rest.thetaLength || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'cylinder';\r\n        return mesh;\r\n    }\r\n    addCylinder(cylinderConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeCylinder(cylinderConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeCone(coneConfig = {}, materialConfig = {}) {\r\n        const { x, y, z, name, breakable = false } = coneConfig, rest = __rest(coneConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new ConeBufferGeometry(rest.radius || 1, rest.height || 1, rest.radiusSegments || 8, rest.heightSegments || 1, rest.openEnded || false, rest.thetaStart || 0, rest.thetaLength || 2 * Math.PI);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'cone';\r\n        return mesh;\r\n    }\r\n    addCone(coneConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeCone(coneConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    // https://threejs.org/docs/index.html#api/en/geometries/TorusBufferGeometry\r\n    makeTorus(torusConfig = {}, materialConfig = {}) {\r\n        const { x, y, z, name, breakable = false } = torusConfig, rest = __rest(torusConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new TorusBufferGeometry(rest.radius || undefined, rest.tube || undefined, rest.radialSegments || undefined, rest.tubularSegments || undefined, rest.arc || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'torus';\r\n        return mesh;\r\n    }\r\n    addTorus(torusConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeTorus(torusConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    addMaterial(materialConfig = {}) {\r\n        const type = Object.keys(materialConfig)[0];\r\n        let material;\r\n        // if (type) {\r\n        //   const { map } = materialConfig[type]\r\n        //   if (typeof map === 'string') materialConfig[type].map = this.loadTexture(map)\r\n        // }\r\n        // always share the same material in headless mode to save memory\r\n        if (this.scene === 'headless')\r\n            return this.defaultMaterial.get();\r\n        switch (type) {\r\n            case 'basic':\r\n                material = new MeshBasicMaterial(materialConfig.basic);\r\n                break;\r\n            case 'normal':\r\n                material = new MeshNormalMaterial(materialConfig.normal);\r\n                break;\r\n            case 'standard':\r\n                material = new MeshStandardMaterial(materialConfig.standard);\r\n                break;\r\n            case 'lambert':\r\n                material = new MeshLambertMaterial(materialConfig.lambert);\r\n                break;\r\n            case 'phong':\r\n                material = new MeshPhongMaterial(materialConfig.phong);\r\n                break;\r\n            case 'physical':\r\n                if (typeof materialConfig.physical !== 'undefined') {\r\n                    material = new MeshPhysicalMaterial(materialConfig.physical);\r\n                }\r\n                else {\r\n                    logger('You need to pass parameters to the physical material. (Fallback to default material)');\r\n                    material = this.defaultMaterial.get();\r\n                }\r\n                break;\r\n            case 'toon':\r\n                material = new MeshToonMaterial(materialConfig.toon);\r\n                break;\r\n            case 'line':\r\n                material = new LineBasicMaterial(materialConfig.line);\r\n                break;\r\n            case 'points':\r\n                material = new PointsMaterial(materialConfig.points);\r\n                break;\r\n            case 'custom':\r\n                material = materialConfig.custom || this.defaultMaterial.get();\r\n                break;\r\n            default:\r\n                material = this.defaultMaterial.get();\r\n                break;\r\n        }\r\n        return material;\r\n    }\r\n}\r\n//# sourceMappingURL=factories.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { Events } from '@yandeu/events'\r\nimport { CollisionEvent, ExtendedObject3D } from '@enable3d/common/dist/types'\r\nimport { Types } from './physics'\r\n\r\nexport class CollisionEvents extends Events {\r\n  public worldTransform: Ammo.btTransform\r\n  public physicsWorld: Ammo.btDiscreteDynamicsWorld\r\n\r\n  public addCollider(\r\n    object1: ExtendedObject3D,\r\n    object2: ExtendedObject3D,\r\n    eventCallback: (event: CollisionEvent) => void\r\n  ) {\r\n    if (!object1.body || !object2.body) return\r\n\r\n    object1.body.checkCollisions = true\r\n    object2.body.checkCollisions = true\r\n\r\n    this.on('collision', (data: { bodies: ExtendedObject3D[]; event: CollisionEvent }) => {\r\n      const { bodies, event } = data\r\n      if (bodies[0]?.name && bodies[1]?.name && object1?.name && object2?.name) {\r\n        if (bodies[0].name === object1.name && bodies[1].name === object2.name) eventCallback(event)\r\n        else if (bodies[1].name === object1.name && bodies[0].name === object2.name) eventCallback(event)\r\n      }\r\n    })\r\n  }\r\n}\r\n","/* eslint-disable @typescript-eslint/no-redeclare */\r\n\r\n/**\r\n * Copied from three.js examples and added a fix\r\n */\r\n\r\n/**\r\n * @author yomboprime https://github.com/yomboprime\r\n *\r\n * @fileoverview This class can be used to subdivide a convex Geometry object into pieces.\r\n *\r\n * Usage:\r\n *\r\n * Use the function prepareBreakableObject to prepare a Mesh object to be broken.\r\n *\r\n * Then, call the various functions to subdivide the object (subdivideByImpact, cutByPlane)\r\n *\r\n * Sub-objects that are product of subdivision don't need prepareBreakableObject to be called on them.\r\n *\r\n * Requisites for the object:\r\n *\r\n *  - Mesh object must have a BufferGeometry (not Geometry) and a Material\r\n *\r\n *  - Vertex normals must be planar (not smoothed)\r\n *\r\n *  - The geometry must be convex (this is not checked in the library). You can create convex\r\n *  geometries with ConvexBufferGeometry. The BoxBufferGeometry, SphereBufferGeometry and other convex primitives\r\n *  can also be used.\r\n *\r\n * Note: This lib adds member variables to object's userData member (see prepareBreakableObject function)\r\n * Use with caution and read the code when using with other libs.\r\n *\r\n * @param {double} minSizeForBreak Min size a debris can have to break.\r\n * @param {double} smallDelta Max distance to consider that a point belongs to a plane.\r\n *\r\n */\r\n\r\nimport { Line3, Mesh, Plane, Vector3 } from 'three'\r\nimport { ConvexGeometry } from './externals'\r\nimport { logger } from '@enable3d/common/dist/logger'\r\n\r\nconst newConvexGeometry = (points: Vector3[]) => {\r\n  // @ts-ignore\r\n  const _newConvexGeometry = window.THREE && window.THREE.ConvexGeometry ? window.THREE.ConvexGeometry : ConvexGeometry\r\n  return new _newConvexGeometry(points)\r\n}\r\n\r\nconst ConvexObjectBreaker = function (minSizeForBreak?: number, smallDelta?: number) {\r\n  // @ts-ignore\r\n  this.minSizeForBreak = minSizeForBreak || 1.4\r\n  // @ts-ignore\r\n  this.smallDelta = smallDelta || 0.0001\r\n\r\n  // @ts-ignore\r\n  this.tempLine1 = new Line3()\r\n  // @ts-ignore\r\n  this.tempPlane1 = new Plane()\r\n  // @ts-ignore\r\n  this.tempPlane2 = new Plane()\r\n  // @ts-ignore\r\n  this.tempPlane_Cut = new Plane()\r\n  // @ts-ignore\r\n  this.tempCM1 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempCM2 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_2 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_3 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_P0 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_P1 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_P2 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_N0 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_N1 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_AB = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_CB = new Vector3()\r\n  // @ts-ignore\r\n  this.tempResultObjects = { object1: null, object2: null }\r\n\r\n  // @ts-ignore\r\n  this.segments = []\r\n  var n = 30 * 30\r\n  // @ts-ignore\r\n  for (var i = 0; i < n; i++) this.segments[i] = false\r\n}\r\n\r\nConvexObjectBreaker.prototype = {\r\n  constructor: ConvexObjectBreaker,\r\n\r\n  prepareBreakableObject: function (object: any, mass: any, velocity: any, angularVelocity: any, breakable: any) {\r\n    // object is a Object3d (normally a Mesh), must have a BufferGeometry, and it must be convex.\r\n    // Its material property is propagated to its children (sub-pieces)\r\n    // mass must be > 0\r\n\r\n    if (!object.geometry.isBufferGeometry) {\r\n      console.error('THREE.ConvexObjectBreaker.prepareBreakableObject(): Parameter object must have a BufferGeometry.')\r\n    }\r\n\r\n    object.userData.ammoPhysicsData = {} // initialise our new data container - would be best to move this to ExtendedObject and not rely on userData at all for best compatibility\r\n    var ammoPhysicsData = object.userData.ammoPhysicsData // get reference to it\r\n    ammoPhysicsData.mass = mass\r\n    ammoPhysicsData.velocity = velocity.clone()\r\n    ammoPhysicsData.angularVelocity = angularVelocity.clone()\r\n    ammoPhysicsData.breakable = breakable\r\n  },\r\n\r\n  /*\r\n   * @param {int} maxRadialIterations Iterations for radial cuts.\r\n   * @param {int} maxRandomIterations Max random iterations for not-radial cuts\r\n   *\r\n   * Returns the array of pieces\r\n   */\r\n  subdivideByImpact: function (\r\n    object: any,\r\n    pointOfImpact: any,\r\n    normal: any,\r\n    maxRadialIterations: any,\r\n    maxRandomIterations: any\r\n  ) {\r\n    var debris: any = []\r\n\r\n    var tempPlane1 = this.tempPlane1\r\n    var tempPlane2 = this.tempPlane2\r\n\r\n    this.tempVector3.addVectors(pointOfImpact, normal)\r\n    tempPlane1.setFromCoplanarPoints(pointOfImpact, object.position, this.tempVector3)\r\n\r\n    var maxTotalIterations = maxRandomIterations + maxRadialIterations\r\n\r\n    var scope = this\r\n\r\n    function subdivideRadial(subObject: any, startAngle: any, endAngle: any, numIterations: any) {\r\n      if (Math.random() < numIterations * 0.05 || numIterations > maxTotalIterations) {\r\n        debris.push(subObject)\r\n\r\n        return\r\n      }\r\n\r\n      var angle = Math.PI\r\n\r\n      if (numIterations === 0) {\r\n        tempPlane2.normal.copy(tempPlane1.normal)\r\n        tempPlane2.constant = tempPlane1.constant\r\n      } else {\r\n        if (numIterations <= maxRadialIterations) {\r\n          angle = (endAngle - startAngle) * (0.2 + 0.6 * Math.random()) + startAngle\r\n\r\n          // Rotate tempPlane2 at impact point around normal axis and the angle\r\n          scope.tempVector3_2.copy(object.position).sub(pointOfImpact).applyAxisAngle(normal, angle).add(pointOfImpact)\r\n          tempPlane2.setFromCoplanarPoints(pointOfImpact, scope.tempVector3, scope.tempVector3_2)\r\n        } else {\r\n          angle = (0.5 * (numIterations & 1) + 0.2 * (2 - Math.random())) * Math.PI\r\n\r\n          // Rotate tempPlane2 at object position around normal axis and the angle\r\n          scope.tempVector3_2\r\n            .copy(pointOfImpact)\r\n            .sub(subObject.position)\r\n            .applyAxisAngle(normal, angle)\r\n            .add(subObject.position)\r\n          scope.tempVector3_3.copy(normal).add(subObject.position)\r\n          tempPlane2.setFromCoplanarPoints(subObject.position, scope.tempVector3_3, scope.tempVector3_2)\r\n        }\r\n      }\r\n\r\n      // Perform the cut\r\n      scope.cutByPlane(subObject, tempPlane2, scope.tempResultObjects)\r\n\r\n      var obj1 = scope.tempResultObjects.object1\r\n      var obj2 = scope.tempResultObjects.object2\r\n\r\n      if (obj1) {\r\n        subdivideRadial(obj1, startAngle, angle, numIterations + 1)\r\n      }\r\n\r\n      if (obj2) {\r\n        subdivideRadial(obj2, angle, endAngle, numIterations + 1)\r\n      }\r\n    }\r\n\r\n    subdivideRadial(object, 0, 2 * Math.PI, 0)\r\n\r\n    return debris\r\n  },\r\n\r\n  cutByPlane: function (object: any, plane: any, output: any) {\r\n    // Returns breakable objects in output.object1 and output.object2 members, the resulting 2 pieces of the cut.\r\n    // object2 can be null if the plane doesn't cut the object.\r\n    // object1 can be null only in case of internal error\r\n    // Returned value is number of pieces, 0 for error.\r\n\r\n    var geometry = object.geometry\r\n    var coords = geometry.attributes.position.array\r\n    var normals = geometry.attributes.normal.array\r\n\r\n    var numPoints = coords.length / 3\r\n    var numFaces = numPoints / 3\r\n\r\n    var indices = geometry.getIndex()\r\n\r\n    if (indices) {\r\n      indices = indices.array\r\n      numFaces = indices.length / 3\r\n    }\r\n\r\n    function getVertexIndex(faceIdx: any, vert: any) {\r\n      // vert = 0, 1 or 2.\r\n\r\n      var idx = faceIdx * 3 + vert\r\n\r\n      return indices ? indices[idx] : idx\r\n    }\r\n\r\n    var points1 = []\r\n    var points2 = []\r\n\r\n    var delta = this.smallDelta\r\n\r\n    // Reset segments mark\r\n    var numPointPairs = numPoints * numPoints\r\n    for (var i = 0; i < numPointPairs; i++) this.segments[i] = false\r\n\r\n    var p0 = this.tempVector3_P0\r\n    var p1 = this.tempVector3_P1\r\n    var n0 = this.tempVector3_N0\r\n    var n1 = this.tempVector3_N1\r\n\r\n    // Iterate through the faces to mark edges shared by coplanar faces\r\n    for (var i = 0; i < numFaces - 1; i++) {\r\n      var a1 = getVertexIndex(i, 0)\r\n      var b1 = getVertexIndex(i, 1)\r\n      var c1 = getVertexIndex(i, 2)\r\n\r\n      // Assuming all 3 vertices have the same normal\r\n      n0.set(normals[a1], normals[a1] + 1, normals[a1] + 2)\r\n\r\n      for (var j = i + 1; j < numFaces; j++) {\r\n        var a2 = getVertexIndex(j, 0)\r\n        var b2 = getVertexIndex(j, 1)\r\n        var c2 = getVertexIndex(j, 2)\r\n\r\n        // Assuming all 3 vertices have the same normal\r\n        n1.set(normals[a2], normals[a2] + 1, normals[a2] + 2)\r\n\r\n        var coplanar = 1 - n0.dot(n1) < delta\r\n\r\n        if (coplanar) {\r\n          if (a1 === a2 || a1 === b2 || a1 === c2) {\r\n            if (b1 === a2 || b1 === b2 || b1 === c2) {\r\n              this.segments[a1 * numPoints + b1] = true\r\n              this.segments[b1 * numPoints + a1] = true\r\n            } else {\r\n              this.segments[c1 * numPoints + a1] = true\r\n              this.segments[a1 * numPoints + c1] = true\r\n            }\r\n          } else if (b1 === a2 || b1 === b2 || b1 === c2) {\r\n            this.segments[c1 * numPoints + b1] = true\r\n            this.segments[b1 * numPoints + c1] = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Transform the plane to object local space\r\n    var localPlane = this.tempPlane_Cut\r\n    object.updateMatrix()\r\n    ConvexObjectBreaker.transformPlaneToLocalSpace(plane, object.matrix, localPlane)\r\n\r\n    // Iterate through the faces adding points to both pieces\r\n    for (var i = 0; i < numFaces; i++) {\r\n      var va = getVertexIndex(i, 0)\r\n      var vb = getVertexIndex(i, 1)\r\n      var vc = getVertexIndex(i, 2)\r\n\r\n      for (var segment = 0; segment < 3; segment++) {\r\n        var i0 = segment === 0 ? va : segment === 1 ? vb : vc\r\n        var i1 = segment === 0 ? vb : segment === 1 ? vc : va\r\n\r\n        var segmentState = this.segments[i0 * numPoints + i1]\r\n\r\n        if (segmentState) continue // The segment already has been processed in another face\r\n\r\n        // Mark segment as processed (also inverted segment)\r\n        this.segments[i0 * numPoints + i1] = true\r\n        this.segments[i1 * numPoints + i0] = true\r\n\r\n        p0.set(coords[3 * i0], coords[3 * i0 + 1], coords[3 * i0 + 2])\r\n        p1.set(coords[3 * i1], coords[3 * i1 + 1], coords[3 * i1 + 2])\r\n\r\n        // mark: 1 for negative side, 2 for positive side, 3 for coplanar point\r\n        var mark0 = 0\r\n\r\n        var d = localPlane.distanceToPoint(p0)\r\n\r\n        if (d > delta) {\r\n          mark0 = 2\r\n          points2.push(p0.clone())\r\n        } else if (d < -delta) {\r\n          mark0 = 1\r\n          points1.push(p0.clone())\r\n        } else {\r\n          mark0 = 3\r\n          points1.push(p0.clone())\r\n          points2.push(p0.clone())\r\n        }\r\n\r\n        // mark: 1 for negative side, 2 for positive side, 3 for coplanar point\r\n        var mark1 = 0\r\n\r\n        var d = localPlane.distanceToPoint(p1)\r\n\r\n        if (d > delta) {\r\n          mark1 = 2\r\n          points2.push(p1.clone())\r\n        } else if (d < -delta) {\r\n          mark1 = 1\r\n          points1.push(p1.clone())\r\n        } else {\r\n          mark1 = 3\r\n          points1.push(p1.clone())\r\n          points2.push(p1.clone())\r\n        }\r\n\r\n        if ((mark0 === 1 && mark1 === 2) || (mark0 === 2 && mark1 === 1)) {\r\n          // Intersection of segment with the plane\r\n\r\n          this.tempLine1.start.copy(p0)\r\n          this.tempLine1.end.copy(p1)\r\n\r\n          var intersection = new Vector3()\r\n          intersection = localPlane.intersectLine(this.tempLine1, intersection)\r\n\r\n          if (intersection === undefined) {\r\n            // Shouldn't happen\r\n            console.error('Internal error: segment does not intersect plane.')\r\n            output.segmentedObject1 = null\r\n            output.segmentedObject2 = null\r\n            return 0\r\n          }\r\n\r\n          points1.push(intersection)\r\n          points2.push(intersection.clone())\r\n        }\r\n      }\r\n    }\r\n\r\n    // Calculate debris mass (very fast and imprecise):\r\n    var newMass = object.userData.ammoPhysicsData.mass * 0.5\r\n\r\n    // Calculate debris Center of Mass (again fast and imprecise)\r\n    this.tempCM1.set(0, 0, 0)\r\n    var radius1 = 0\r\n    var numPoints1 = points1.length\r\n\r\n    if (numPoints1 > 0) {\r\n      for (var i = 0; i < numPoints1; i++) this.tempCM1.add(points1[i])\r\n\r\n      this.tempCM1.divideScalar(numPoints1)\r\n      for (var i = 0; i < numPoints1; i++) {\r\n        var p = points1[i]\r\n        p.sub(this.tempCM1)\r\n        radius1 = Math.max(radius1, p.x, p.y, p.z)\r\n      }\r\n      this.tempCM1.add(object.position)\r\n    }\r\n\r\n    this.tempCM2.set(0, 0, 0)\r\n    var radius2 = 0\r\n    var numPoints2 = points2.length\r\n    if (numPoints2 > 0) {\r\n      for (var i = 0; i < numPoints2; i++) this.tempCM2.add(points2[i])\r\n\r\n      this.tempCM2.divideScalar(numPoints2)\r\n      for (var i = 0; i < numPoints2; i++) {\r\n        var p = points2[i]\r\n        p.sub(this.tempCM2)\r\n        radius2 = Math.max(radius2, p.x, p.y, p.z)\r\n      }\r\n      this.tempCM2.add(object.position)\r\n    }\r\n\r\n    var object1 = null\r\n    var object2 = null\r\n\r\n    var numObjects = 0\r\n\r\n    /**\r\n     * MOD: Wrapped in try catch block to avoid errors\r\n     */\r\n    if (numPoints1 > 4) {\r\n      try {\r\n        object1 = new Mesh(newConvexGeometry(points1), object.material)\r\n        object1.position.copy(this.tempCM1)\r\n        object1.quaternion.copy(object.quaternion)\r\n        object1.userData = object.userData\r\n\r\n        this.prepareBreakableObject(\r\n          object1,\r\n          newMass,\r\n          object.userData.ammoPhysicsData.velocity,\r\n          object.userData.ammoPhysicsData.angularVelocity,\r\n          2 * radius1 > this.minSizeForBreak\r\n        )\r\n\r\n        numObjects++\r\n      } catch (error: any) {\r\n        logger('Error in ConvexObjectBreaker.ts', true)\r\n        logger(error, true)\r\n      }\r\n    }\r\n\r\n    if (numPoints2 > 4) {\r\n      try {\r\n        object2 = new Mesh(newConvexGeometry(points2), object.material)\r\n        object2.position.copy(this.tempCM2)\r\n        object2.quaternion.copy(object.quaternion)\r\n        object2.userData = object.userData\r\n\r\n        this.prepareBreakableObject(\r\n          object2,\r\n          newMass,\r\n          object.userData.ammoPhysicsData.velocity,\r\n          object.userData.ammoPhysicsData.angularVelocity,\r\n          2 * radius2 > this.minSizeForBreak\r\n        )\r\n\r\n        numObjects++\r\n      } catch (error: any) {\r\n        logger('Error in ConvexObjectBreaker.ts', true)\r\n        logger(error, true)\r\n      }\r\n    }\r\n\r\n    output.object1 = object1\r\n    output.object2 = object2\r\n\r\n    return numObjects\r\n  }\r\n}\r\n\r\nConvexObjectBreaker.transformFreeVector = function (v: any, m: any) {\r\n  // input:\r\n  // vector interpreted as a free vector\r\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\r\n\r\n  var x = v.x,\r\n    y = v.y,\r\n    z = v.z\r\n  var e = m.elements\r\n\r\n  v.x = e[0] * x + e[4] * y + e[8] * z\r\n  v.y = e[1] * x + e[5] * y + e[9] * z\r\n  v.z = e[2] * x + e[6] * y + e[10] * z\r\n\r\n  return v\r\n}\r\n\r\nConvexObjectBreaker.transformFreeVectorInverse = function (v: any, m: any) {\r\n  // input:\r\n  // vector interpreted as a free vector\r\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\r\n\r\n  var x = v.x,\r\n    y = v.y,\r\n    z = v.z\r\n  var e = m.elements\r\n\r\n  v.x = e[0] * x + e[1] * y + e[2] * z\r\n  v.y = e[4] * x + e[5] * y + e[6] * z\r\n  v.z = e[8] * x + e[9] * y + e[10] * z\r\n\r\n  return v\r\n}\r\n\r\nConvexObjectBreaker.transformTiedVectorInverse = function (v: any, m: any) {\r\n  // input:\r\n  // vector interpreted as a tied (ordinary) vector\r\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\r\n\r\n  var x = v.x,\r\n    y = v.y,\r\n    z = v.z\r\n  var e = m.elements\r\n\r\n  v.x = e[0] * x + e[1] * y + e[2] * z - e[12]\r\n  v.y = e[4] * x + e[5] * y + e[6] * z - e[13]\r\n  v.z = e[8] * x + e[9] * y + e[10] * z - e[14]\r\n\r\n  return v\r\n}\r\n\r\nConvexObjectBreaker.transformPlaneToLocalSpace = (function () {\r\n  var v1 = new Vector3()\r\n\r\n  return function transformPlaneToLocalSpace(plane: any, m: any, resultPlane: any) {\r\n    resultPlane.normal.copy(plane.normal)\r\n    resultPlane.constant = plane.constant\r\n\r\n    var referencePoint = ConvexObjectBreaker.transformTiedVectorInverse(plane.coplanarPoint(v1), m)\r\n\r\n    ConvexObjectBreaker.transformFreeVectorInverse(resultPlane.normal, m)\r\n\r\n    // recalculate constant (like in setFromNormalAndCoplanarPoint)\r\n    resultPlane.constant = -referencePoint.dot(resultPlane.normal)\r\n  }\r\n})()\r\n\r\nexport { ConvexObjectBreaker }\r\n","// Inspired by https://github.com/playcanvas/engine/blob/master/examples/wasm-loader.js\r\nconst wasmSupported = (() => {\r\n    try {\r\n        if (typeof WebAssembly === 'object' && typeof WebAssembly.instantiate === 'function') {\r\n            const module = new WebAssembly.Module(Uint8Array.of(0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00));\r\n            if (module instanceof WebAssembly.Module)\r\n                return new WebAssembly.Instance(module) instanceof WebAssembly.Instance;\r\n        }\r\n    }\r\n    catch (err) {\r\n        if (err instanceof Error)\r\n            console.error(err.message);\r\n    }\r\n    return false;\r\n})();\r\nconst loadScriptAsync = (url, doneCallback) => {\r\n    var tag = document.createElement('script');\r\n    tag.onload = () => {\r\n        doneCallback();\r\n    };\r\n    tag.onerror = () => {\r\n        throw new Error(`failed to load ${url}`);\r\n    };\r\n    tag.async = true;\r\n    tag.src = url;\r\n    document.head.appendChild(tag);\r\n};\r\nconst loadAmmoModule = (path, doneCallback) => {\r\n    // console.log(wasmSupported ? 'WebAssembly is supported' : 'WebAssembly is not supported')\r\n    if (wasmSupported)\r\n        loadScriptAsync(`${path}/ammo.wasm.js`, () => doneCallback());\r\n    else\r\n        loadScriptAsync(`${path}/ammo.js`, () => doneCallback());\r\n};\r\nexport default loadAmmoModule;\r\n//# sourceMappingURL=wasmLoader.js.map","import loadAmmoModule from './wasmLoader';\r\nconst PhysicsLoader = (path, callback) => {\r\n    if (typeof window !== 'undefined')\r\n        window.__loadPhysics = true;\r\n    loadAmmoModule(path, () => {\r\n        Ammo().then(() => {\r\n            callback();\r\n        });\r\n    });\r\n};\r\nexport { PhysicsLoader };\r\n//# sourceMappingURL=physicsLoader.js.map","// https://www.typescriptlang.org/docs/handbook/mixins.html\r\nconst applyMixins = (derivedCtor, baseCtors) => {\r\n    baseCtors.forEach(baseCtor => {\r\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\r\n            // @ts-ignore\r\n            Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\r\n        });\r\n    });\r\n};\r\nexport default applyMixins;\r\n//# sourceMappingURL=applyMixins.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport applyMixins from '@enable3d/common/dist/applyMixins'\r\nimport ClosestRayResultCallback from './closestRayResultCallback'\r\nimport AllHitsRayResultCallback from './allHitsRayResultCallback'\r\nimport { AmmoPhysics } from '../physics'\r\n\r\nclass Raycaster {\r\n  public readonly type: string\r\n  protected _btRayFrom: Ammo.btVector3\r\n  protected _btRayTo: Ammo.btVector3\r\n  protected _btRayCallback: Ammo.RayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n\r\n  setRayFromWorld(x = 0, y = 0, z = 0) {\r\n    this._btRayFrom.setValue(x, y, z)\r\n  }\r\n\r\n  setRayToWorld(x = 0, y = 0, z = 0) {\r\n    this._btRayTo.setValue(x, y, z)\r\n  }\r\n\r\n  hasHit() {\r\n    return this._btRayCallback.hasHit()\r\n  }\r\n\r\n  rayTest() {\r\n    if (typeof this._btRayCallback !== 'undefined') Ammo.destroy(this._btRayCallback)\r\n\r\n    this._btRayCallback =\r\n      this.type === 'closest'\r\n        ? new Ammo.ClosestRayResultCallback(this._btRayFrom, this._btRayTo)\r\n        : new Ammo.AllHitsRayResultCallback(this._btRayFrom, this._btRayTo)\r\n\r\n    this.physics.physicsWorld.rayTest(this._btRayFrom, this._btRayTo, this._btRayCallback)\r\n  }\r\n\r\n  destroy() {\r\n    if (typeof this._btRayFrom !== 'undefined') Ammo.destroy(this._btRayFrom)\r\n    if (typeof this._btRayTo !== 'undefined') Ammo.destroy(this._btRayTo)\r\n    if (typeof this._btRayCallback !== 'undefined') Ammo.destroy(this._btRayCallback)\r\n  }\r\n}\r\n\r\ninterface ClosestRaycaster extends Raycaster, ClosestRayResultCallback {}\r\ninterface AllHitsRaycaster extends Raycaster, AllHitsRayResultCallback {}\r\n\r\nclass ClosestRaycaster implements Raycaster, ClosestRayResultCallback {\r\n  public readonly type = 'closest'\r\n  protected _btRayFrom = new Ammo.btVector3(0, 0, 0)\r\n  protected _btRayTo = new Ammo.btVector3(0, 0, 0)\r\n  protected _btRayCallback: Ammo.ClosestRayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n}\r\n\r\nclass AllHitsRaycaster implements Raycaster, AllHitsRayResultCallback {\r\n  public readonly type = 'allHits'\r\n  protected _btRayFrom = new Ammo.btVector3(0, 0, 0)\r\n  protected _btRayTo = new Ammo.btVector3(0, 0, 0)\r\n  protected _btRayCallback: Ammo.AllHitsRayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n}\r\n\r\napplyMixins(ClosestRaycaster, [Raycaster, ClosestRayResultCallback])\r\napplyMixins(AllHitsRaycaster, [Raycaster, AllHitsRayResultCallback])\r\n\r\nexport { ClosestRaycaster, AllHitsRaycaster }\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { AmmoPhysics } from '../physics'\r\nimport { ExtendedObject3D } from '@enable3d/common/dist/types'\r\n\r\nexport default class ClosestRayResultCallback {\r\n  protected _btRayCallback: Ammo.ClosestRayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n\r\n  getHitPointWorld(): { x: number; y: number; z: number } {\r\n    const h = this._btRayCallback.get_m_hitPointWorld() as Ammo.btVector3\r\n\r\n    const point = { x: h.x(), y: h.y(), z: h.z() }\r\n\r\n    return point\r\n  }\r\n\r\n  getHitNormalWorld() {\r\n    const h = this._btRayCallback.get_m_hitNormalWorld()\r\n\r\n    const normal = { x: h.x(), y: h.y(), z: h.z() }\r\n\r\n    return normal\r\n  }\r\n\r\n  getCollisionObject(): ExtendedObject3D {\r\n    // @ts-ignore\r\n    const rb = Ammo.castObject(this._btRayCallback.get_m_collisionObject(), Ammo.btRigidBody)\r\n    // @ts-ignore\r\n    return rb.threeObject\r\n  }\r\n}\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { AmmoPhysics } from '../physics'\r\nimport { ExtendedObject3D } from '@enable3d/common/dist/types'\r\nimport { logger } from '@enable3d/common/dist/logger'\r\n\r\nexport default class AllHitsRayResultCallback {\r\n  protected _btRayCallback: Ammo.AllHitsRayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n\r\n  getHitPointsWorld() {\r\n    const h = this._btRayCallback.get_m_hitPointWorld() as Ammo.btVector3Array\r\n\r\n    const points = []\r\n    for (let i = h.size() - 1; i >= 0; i--) {\r\n      const hh = h.at(i)\r\n      points.push({ x: hh.x(), y: hh.y(), z: hh.z() })\r\n    }\r\n\r\n    return points\r\n  }\r\n\r\n  // TODO: Remove this in future versions!\r\n  getHitPointWorld() {\r\n    logger('Use getHitPointsWorld() instead of getHitPointWorld() for the AllHitsRayCaster!')\r\n    return this.getHitPointsWorld()\r\n  }\r\n\r\n  getHitNormalsWorld() {\r\n    const h = this._btRayCallback.get_m_hitNormalWorld()\r\n\r\n    const normals = []\r\n    for (let i = h.size() - 1; i >= 0; i--) {\r\n      const hh = h.at(i)\r\n      normals.push({ x: hh.x(), y: hh.y(), z: hh.z() })\r\n    }\r\n\r\n    return normals\r\n  }\r\n\r\n  getCollisionObjects() {\r\n    const threeObjects: ExtendedObject3D[] = []\r\n    const objects = this._btRayCallback.get_m_collisionObjects()\r\n\r\n    for (let i = objects.size() - 1; i >= 0; i--) {\r\n      // @ts-ignore\r\n      const rb = Ammo.castObject(objects.at(i), Ammo.btRigidBody)\r\n      // @ts-ignore\r\n      threeObjects.push(rb.threeObject)\r\n    }\r\n    return threeObjects\r\n  }\r\n}\r\n","/**\r\n * @author yandeu\r\n * @description Ported to TypeScript\r\n */\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\n/**\r\n * This is the Clock class THREE provides.\r\n */\r\nclass Clock {\r\n  autoStart: boolean\r\n  startTime: number\r\n  oldTime: number\r\n  elapsedTime: number\r\n  running: boolean\r\n\r\n  constructor(autoStart = true) {\r\n    this.autoStart = autoStart !== undefined ? autoStart : true\r\n    this.startTime = 0\r\n    this.oldTime = 0\r\n    this.elapsedTime = 0\r\n    this.running = false\r\n  }\r\n\r\n  start() {\r\n    this.startTime = (typeof performance === 'undefined' ? Date : performance).now() // see #10732\r\n\r\n    this.oldTime = this.startTime\r\n    this.elapsedTime = 0\r\n    this.running = true\r\n  }\r\n\r\n  stop() {\r\n    this.getElapsedTime()\r\n    this.running = false\r\n    this.autoStart = false\r\n  }\r\n\r\n  getElapsedTime() {\r\n    this.getDelta()\r\n    return this.elapsedTime\r\n  }\r\n\r\n  getDelta() {\r\n    let diff = 0\r\n\r\n    if (this.autoStart && !this.running) {\r\n      this.start()\r\n      return 0\r\n    }\r\n\r\n    if (this.running) {\r\n      const newTime = (typeof performance === 'undefined' ? Date : performance).now()\r\n\r\n      diff = (newTime - this.oldTime) / 1000\r\n      this.oldTime = newTime\r\n\r\n      this.elapsedTime += diff\r\n    }\r\n\r\n    return diff\r\n  }\r\n}\r\n\r\nexport { Clock }\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { logger } from '@enable3d/common/dist/logger'\r\nimport PhysicsBody from '@enable3d/common/dist/physicsBody'\r\n\r\nimport { ExtendedObject3D } from '@enable3d/common/dist/extendedObject3D'\r\nexport { ExtendedObject3D }\r\n\r\nimport { ExtendedMesh } from '@enable3d/common/dist/extendedMesh'\r\nexport { ExtendedMesh }\r\n\r\nimport { ExtendedGroup } from '@enable3d/common/dist/extendedGroup'\r\nexport { ExtendedGroup }\r\n\r\nimport Shapes from './shapes'\r\nimport Constraints from './constraints'\r\nimport { Events } from '@yandeu/events'\r\nimport { Geometry } from './externals'\r\nimport { BufferGeometry, Euler, Matrix4, Quaternion, REVISION, Scene, Vector3 } from 'three'\r\nimport {\r\n  createHACDShapes,\r\n  createHullShape,\r\n  createTriMeshShape,\r\n  createVHACDShapes,\r\n  iterateGeometries\r\n} from './three-to-ammo'\r\nimport { createTorusShape } from './torusShape'\r\nimport Factories from '@enable3d/common/dist/factories'\r\nimport { CollisionEvents } from './collisionEvents'\r\n\r\nimport DebugDrawer from './debugDrawer'\r\nimport { ConvexObjectBreaker } from './convexObjectBreaker'\r\n\r\nimport { PhysicsLoader } from '@enable3d/common/dist/physicsLoader'\r\nimport DefaultMaterial from '@enable3d/common/dist/defaultMaterial'\r\nexport { PhysicsLoader }\r\n\r\nimport * as Types from '@enable3d/common/dist/types'\r\nimport { AllHitsRaycaster, ClosestRaycaster } from './raycaster/raycaster'\r\nexport { ClosestRaycaster, AllHitsRaycaster }\r\nexport { Types }\r\n\r\n// Export THREE.Clock\r\nexport { Clock } from './lib/Clock'\r\n\r\nclass AmmoPhysics extends Events {\r\n  public worldTransform: Ammo.btTransform\r\n  public factory: Factories\r\n  public isHeadless: boolean\r\n\r\n  public rigidBodies: ExtendedObject3D[] = []\r\n  protected earlierDetectedCollisions: { combinedName: string; collision: boolean }[] = []\r\n  protected gravity: { x: number; y: number; z: number }\r\n\r\n  protected tmpEuler: Euler\r\n  protected tmpQuaternion: Quaternion\r\n  protected tmpVector3: Vector3\r\n  protected tmpVector3a: Vector3\r\n  protected tmpMatrix4: Matrix4\r\n  protected tmpMatrix4a: Matrix4\r\n  protected tmpBtVector3: Ammo.btVector3\r\n  protected tmpBtQuaternion: Ammo.btQuaternion\r\n\r\n  public physicsWorld: Ammo.btSoftRigidDynamicsWorld\r\n  protected debugDrawer: DebugDrawer\r\n  private convexBreaker: any\r\n  protected addRigidBody: (threeObject: ExtendedObject3D, physicsShape: any, mass: any, pos: any, quat: any) => void\r\n  private objectsToRemove: any[]\r\n  private numObjectsToRemove: number\r\n\r\n  protected emptyV3: Vector3\r\n  protected impactPoint: Vector3\r\n  protected impactNormal: Vector3\r\n\r\n  protected defaultMaterial: DefaultMaterial\r\n\r\n  private shapes: Shapes\r\n  private constraints: Constraints\r\n  public collisionEvents: CollisionEvents\r\n\r\n  private readonly complexShapes = ['plane', 'hull', 'hacd', 'vhacd', 'convexMesh', 'concaveMesh']\r\n\r\n  constructor(public scene: Scene | 'headless', public config: Types.ThreeGraphicsConfig = {}) {\r\n    super()\r\n\r\n    this.gravity = config.gravity || { x: 0, y: -9.81, z: 0 }\r\n    this.isHeadless = scene === 'headless' ? true : false\r\n\r\n    this.tmpEuler = new Euler()\r\n    this.tmpQuaternion = new Quaternion()\r\n    this.tmpVector3 = new Vector3()\r\n    this.tmpVector3a = new Vector3()\r\n    this.tmpMatrix4 = new Matrix4()\r\n    this.tmpMatrix4a = new Matrix4()\r\n    this.tmpBtVector3 = new Ammo.btVector3()\r\n    this.tmpBtQuaternion = new Ammo.btQuaternion(0, 0, 0, 1)\r\n    this.emptyV3 = new Vector3()\r\n    this.impactPoint = new Vector3()\r\n    this.impactNormal = new Vector3()\r\n\r\n    if (scene !== 'headless') {\r\n      this.defaultMaterial = new DefaultMaterial()\r\n\r\n      // const info = `Ammo.js physics provided by enable3d`\r\n      // console.log(\r\n      //   `%c %c %c %c %c ${info} %c https://enable3d.io/`,\r\n      //   'background: #ff0000',\r\n      //   'background: #ffff00',\r\n      //   'background: #00ff00',\r\n      //   'background: #00ffff',\r\n      //   'color: #fff; background: #000000;',\r\n      //   'background: none'\r\n      // )\r\n    }\r\n\r\n    this.start()\r\n  }\r\n\r\n  /** @deprecated Use worldTransform instead of tmpTrans. */\r\n  get tmpTrans() {\r\n    console.warn('Use worldTransform instead of tmpTrans.')\r\n    return this.worldTransform\r\n  }\r\n\r\n  /** @deprecated Use worldTransform instead of tmpTrans. */\r\n  set tmpTrans(transform: Ammo.btTransform) {\r\n    console.warn('Use worldTransform instead of tmpTrans.')\r\n    this.worldTransform = transform\r\n  }\r\n\r\n  /** Destroys a physics body. */\r\n  public destroy(body: PhysicsBody | ExtendedObject3D | ExtendedMesh) {\r\n    // @ts-ignore\r\n    const b: PhysicsBody = Object.keys(body).includes('body') ? body.body : body\r\n\r\n    if (typeof b?.ammo === 'undefined') return\r\n\r\n    // @ts-ignore\r\n    let obj: ExtendedObject3D | null = b.ammo.threeObject as ExtendedObject3D\r\n    const name = obj.name\r\n\r\n    if (name && obj) {\r\n      if (obj?.body?.ammo) {\r\n        // remove from physics world\r\n        !obj.body.isSoftBody\r\n          ? this.physicsWorld.removeRigidBody(obj.body.ammo)\r\n          : this.physicsWorld.removeSoftBody(obj.body.ammo as any)\r\n\r\n        // call destructor on body\r\n        obj.body.destructor()\r\n\r\n        // reset properties\r\n        // @ts-ignore\r\n        obj.body = undefined\r\n        obj.hasBody = false\r\n\r\n        // remove from this.objectAmmo\r\n        // @ts-ignore\r\n        delete b.ammo.threeObject\r\n        // remove from this.rigidBodies\r\n        for (let i = 0; i < this.rigidBodies.length; i++) {\r\n          if (this.rigidBodies[i].name === name) {\r\n            this.rigidBodies.splice(i, 1)\r\n            i--\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.scene === 'headless' && obj) obj = null\r\n  }\r\n\r\n  protected setup() {\r\n    // add worldTransform\r\n    this.worldTransform = new Ammo.btTransform()\r\n\r\n    // setup ammo physics\r\n    if (typeof this.config.setupPhysicsWorld === 'function') this.physicsWorld = this.config.setupPhysicsWorld() as any\r\n    else this.physicsWorld = this.setupPhysicsWorld()\r\n\r\n    if (this.scene !== 'headless') {\r\n      // Initialize convexBreaker\r\n      // @ts-ignore\r\n      this.convexBreaker = new ConvexObjectBreaker()\r\n\r\n      this.objectsToRemove = []\r\n      this.numObjectsToRemove = 0\r\n      for (let i = 0; i < 500; i++) {\r\n        this.objectsToRemove[i] = null\r\n      }\r\n    }\r\n\r\n    this.collisionEvents = new CollisionEvents()\r\n    this.factory = new Factories(this.scene)\r\n    this.shapes = new Shapes(this.factory, (object: ExtendedObject3D, config?: Types.AddExistingConfig) =>\r\n      this.addExisting(object, config)\r\n    )\r\n    this.constraints = new Constraints(this.worldTransform, this.physicsWorld)\r\n\r\n    if (this.scene !== 'headless') this.debugDrawer = new DebugDrawer(this.scene, this.physicsWorld, {})\r\n  }\r\n\r\n  public updateDebugger() {\r\n    if (this.scene === 'headless') return\r\n\r\n    if (this.debugDrawer && this.debugDrawer.enabled) this.debugDrawer.update()\r\n  }\r\n\r\n  protected setupPhysicsWorld() {\r\n    const g = this.gravity\r\n    const { softBodies = false } = this.config\r\n\r\n    let physicsWorld: any\r\n\r\n    if (!softBodies) {\r\n      const collisionConfiguration = new Ammo.btDefaultCollisionConfiguration(),\r\n        dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\r\n        broadphase = new Ammo.btDbvtBroadphase(),\r\n        solver = new Ammo.btSequentialImpulseConstraintSolver()\r\n      physicsWorld = new Ammo.btDiscreteDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration)\r\n    }\r\n\r\n    if (softBodies) {\r\n      const collisionConfiguration = new Ammo.btSoftBodyRigidBodyCollisionConfiguration(),\r\n        dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\r\n        broadphase = new Ammo.btDbvtBroadphase(),\r\n        solver = new Ammo.btSequentialImpulseConstraintSolver(),\r\n        softBodySolver = new Ammo.btDefaultSoftBodySolver()\r\n      physicsWorld = new Ammo.btSoftRigidDynamicsWorld(\r\n        dispatcher,\r\n        broadphase,\r\n        solver,\r\n        collisionConfiguration,\r\n        softBodySolver\r\n      )\r\n    }\r\n\r\n    physicsWorld.setGravity(new Ammo.btVector3(g.x, g.y, g.z))\r\n    return physicsWorld\r\n  }\r\n\r\n  private createDebrisFromBreakableObject(object: ExtendedObject3D, parent: ExtendedObject3D) {\r\n    if (this.scene === 'headless') return\r\n\r\n    object.material = parent.material\r\n    object.shape = 'hull'\r\n    object.fragmentDepth = parent.fragmentDepth + 1\r\n    object.name = `${parent.name}__DEBRIS_${object.id}`\r\n\r\n    // Add the object to the scene\r\n    this.scene.add(object)\r\n\r\n    // Add physics to the object\r\n    // @ts-ignore\r\n    this.addExisting(object, { autoCenter: true })\r\n\r\n    object.body.fractureImpulse = parent.body.fractureImpulse\r\n    object.body.breakable = false\r\n    // make this fragment breakable in 2.5seconds\r\n    setTimeout(() => {\r\n      object.body.breakable = true\r\n    }, 2500)\r\n  }\r\n\r\n  private removeDebris(object: any) {\r\n    if (this.scene === 'headless') return\r\n\r\n    this.scene.remove(object)\r\n    this.destroy(object)\r\n  }\r\n\r\n  public update(delta: number) {\r\n    this.updatePhysics(delta)\r\n    this.detectCollisions()\r\n  }\r\n\r\n  private updatePhysics(delta: number) {\r\n    // step world\r\n    const deltaTime = delta / 1000\r\n\r\n    // must always satisfy the equation timeStep < maxSubSteps * fixedTimeStep\r\n    this.physicsWorld.stepSimulation(deltaTime, this.config.maxSubSteps || 4, this.config.fixedTimeStep || 1 / 60)\r\n\r\n    // update rigid bodies\r\n    for (let i = 0; i < this.rigidBodies.length; i++) {\r\n      const objThree = this.rigidBodies[i]\r\n      const objPhys = objThree.body.ammo\r\n      const ms = objPhys.getMotionState()\r\n\r\n      if (ms) {\r\n        ms.getWorldTransform(this.worldTransform)\r\n\r\n        // check if object did an update since last call\r\n        if (objThree.body.didUpdate) {\r\n          // @ts-ignore\r\n          if (objThree.body._emitUpdateEvents) objThree.body.eventEmitter.emit('update')\r\n          objThree.body.didUpdate = false\r\n        }\r\n\r\n        // update positions\r\n        if (objThree.body.ammo.isKinematicObject() && objThree.body.needUpdate) {\r\n          // get position and rotation\r\n          objThree.getWorldQuaternion(this.tmpQuaternion)\r\n          objThree.getWorldPosition(this.tmpVector3)\r\n          // adjust tmp variables\r\n          this.tmpBtVector3.setValue(this.tmpVector3.x, this.tmpVector3.y, this.tmpVector3.z)\r\n          this.tmpBtQuaternion.setValue(\r\n            this.tmpQuaternion.x,\r\n            this.tmpQuaternion.y,\r\n            this.tmpQuaternion.z,\r\n            this.tmpQuaternion.w\r\n          )\r\n          // set position and rotation\r\n          this.worldTransform.setOrigin(this.tmpBtVector3)\r\n          this.worldTransform.setRotation(this.tmpBtQuaternion)\r\n          // set transform\r\n          ms.setWorldTransform(this.worldTransform)\r\n          // reset needsUpdate\r\n          objThree.body.needUpdate = false\r\n        } else if (objThree.body.skipUpdate) {\r\n          // do nothing ...\r\n        } else if (!objThree.body.ammo.isStaticObject()) {\r\n          // get position and rotation\r\n          const p = this.worldTransform.getOrigin()\r\n          const q = this.worldTransform.getRotation()\r\n          // body offset\r\n          const o = objThree.body.offset\r\n          // set position and rotation\r\n          if (objThree.body.ignoreScale) {\r\n            this.tmpVector3a.set(objThree.scale.x, objThree.scale.y, objThree.scale.z)\r\n          } else {\r\n            const scale = objThree.body.ammo.getCollisionShape().getLocalScaling()\r\n            this.tmpVector3a.set(scale.x(), scale.y(), scale.z())\r\n          }\r\n          this.tmpVector3.set(p.x() + o.x, p.y() + o.y, p.z() + o.z)\r\n          this.tmpQuaternion.set(q.x(), q.y(), q.z(), q.w())\r\n          this.tmpMatrix4.compose(this.tmpVector3, this.tmpQuaternion, this.tmpVector3a)\r\n          if (objThree.parent) {\r\n            // compatibility fix for three.js >= r123 (Dezember 2020)\r\n            // @ts-ignore\r\n            if (parseInt(REVISION) >= 123) this.tmpMatrix4a.copy(objThree.parent.matrixWorld).invert()\r\n            else this.tmpMatrix4a.getInverse(objThree.parent.matrixWorld)\r\n          } else {\r\n            this.tmpMatrix4a.identity()\r\n          }\r\n          this.tmpMatrix4a.multiply(this.tmpMatrix4)\r\n          this.tmpMatrix4a.decompose(objThree.position, objThree.quaternion, objThree.scale)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private detectCollisions() {\r\n    const detectedCollisions: { combinedName: string; collision: boolean }[] = []\r\n\r\n    // reset these vectors\r\n    this.impactPoint.set(0, 0, 0)\r\n    this.impactNormal.set(0, 0, 0)\r\n\r\n    const dispatcher = this.physicsWorld.getDispatcher()\r\n    const numManifolds = dispatcher.getNumManifolds()\r\n\r\n    // check collisions\r\n    for (let i = 0; i < numManifolds; i++) {\r\n      const contactManifold = dispatcher.getManifoldByIndexInternal(i)\r\n      const numContacts = contactManifold.getNumContacts()\r\n\r\n      // @ts-ignore\r\n      const rb0 = Ammo.castObject(contactManifold.getBody0(), Ammo.btRigidBody)\r\n      // @ts-ignore\r\n      const rb1 = Ammo.castObject(contactManifold.getBody1(), Ammo.btRigidBody)\r\n\r\n      const threeObject0 = rb0.threeObject as ExtendedObject3D\r\n      const threeObject1 = rb1.threeObject as ExtendedObject3D\r\n\r\n      if (!threeObject0 || !threeObject1) {\r\n        continue\r\n      }\r\n\r\n      // do not check collision between 2 unnamed objects\r\n      // (fragments do not have a name, for example)\r\n      if (rb0.name === '' && rb1.name === '') continue\r\n\r\n      /**\r\n       * Get some information\r\n       */\r\n\r\n      const checkCollisions0 = threeObject0.body?.checkCollisions\r\n      const checkCollisions1 = threeObject1.body?.checkCollisions\r\n\r\n      const breakable0 = threeObject0.body.breakable\r\n      const breakable1 = threeObject1.body.breakable\r\n\r\n      const fractureImpulse0 = threeObject0.body.fractureImpulse\r\n      const fractureImpulse1 = threeObject1.body.fractureImpulse\r\n\r\n      const checkCollisions = checkCollisions0 || checkCollisions1\r\n      const checkBreakable = breakable0 || breakable1\r\n\r\n      if (typeof threeObject0.fragmentDepth === 'undefined') threeObject0.fragmentDepth = 0\r\n      if (typeof threeObject1.fragmentDepth === 'undefined') threeObject1.fragmentDepth = 0\r\n\r\n      if (!checkCollisions && !checkBreakable) continue\r\n\r\n      let contact = false\r\n      let maxImpulse = 0\r\n\r\n      let event: Types.CollisionEvent = 'start'\r\n\r\n      for (let j = 0; j < numContacts; j++) {\r\n        const contactPoint = contactManifold.getContactPoint(j)\r\n        const distance = contactPoint.getDistance()\r\n\r\n        // Distance definition: when the distance between objects is positive, they are separated. When the distance is negative, they are penetrating. Zero distance means exactly touching.\r\n        // https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=5831\r\n        if (distance <= 0) {\r\n          contact = true\r\n          const impulse = contactPoint.getAppliedImpulse()\r\n          const impactPoint = contactPoint.get_m_positionWorldOnB()\r\n          const impactNormal = contactPoint.get_m_normalWorldOnB()\r\n\r\n          // handle collision events\r\n          if (checkCollisions0 || checkCollisions1) {\r\n            const names = [threeObject0.name, threeObject1.name].sort()\r\n            const combinedName = `${names[0]}__${names[1]}`\r\n\r\n            if (this.earlierDetectedCollisions.find(el => el.combinedName === combinedName)) event = 'collision'\r\n\r\n            if (!detectedCollisions.find(el => el.combinedName === combinedName)) {\r\n              detectedCollisions.push({ combinedName, collision: true })\r\n              this.collisionEvents.emit('collision', { bodies: [threeObject0, threeObject1], event })\r\n            }\r\n          }\r\n\r\n          // get impactPoint and impactNormal of the hight impulse point (for breakable objects)\r\n          if (impulse >= maxImpulse) {\r\n            maxImpulse = impulse\r\n            // get what ween need for the convex breaking\r\n            if (breakable0 || breakable1) {\r\n              this.impactPoint.set(impactPoint.x(), impactPoint.y(), impactPoint.z())\r\n              this.impactNormal.set(impactNormal.x(), impactNormal.y(), impactNormal.z())\r\n            }\r\n          }\r\n\r\n          break\r\n        }\r\n      }\r\n\r\n      // if no point has contact, abort\r\n      if (!contact) continue\r\n\r\n      // if no objects are breakable, abort\r\n      if (!checkBreakable) continue\r\n\r\n      /**\r\n       * check for breakable objects (subdivision)\r\n       */\r\n      const MAX_FRAGMENT_DEPTH = 2\r\n\r\n      // since the library convexBreaker makes use of three's userData.ammoPhysicsData\r\n      // we have to clone the necessary params to threeObjectX.userData.ammoPhysicsData\r\n      // TODO improve this\r\n\r\n      this.emptyV3.set(0, 0, 0)\r\n      threeObject0.userData.ammoPhysicsData = {\r\n        mass: 1,\r\n        velocity: this.emptyV3,\r\n        angularVelocity: this.emptyV3,\r\n        breakable: breakable0,\r\n        physicsBody: rb0\r\n      }\r\n      threeObject1.userData.ammoPhysicsData = {\r\n        mass: 1,\r\n        velocity: this.emptyV3,\r\n        angularVelocity: this.emptyV3,\r\n        breakable: breakable1,\r\n        physicsBody: rb1\r\n      }\r\n\r\n      // threeObject0\r\n      if (breakable0 && maxImpulse > fractureImpulse0 && threeObject0.fragmentDepth < MAX_FRAGMENT_DEPTH) {\r\n        const debris = this.convexBreaker.subdivideByImpact(threeObject0, this.impactPoint, this.impactNormal, 1, 2) //, 1.5)\r\n\r\n        const numObjects = debris.length\r\n        for (let j = 0; j < numObjects; j++) {\r\n          const vel = rb0.getLinearVelocity()\r\n          const angVel = rb0.getAngularVelocity()\r\n          const fragment = debris[j] as ExtendedObject3D\r\n          fragment.userData.ammoPhysicsData.velocity.set(vel.x(), vel.y(), vel.z())\r\n          fragment.userData.ammoPhysicsData.angularVelocity.set(angVel.x(), angVel.y(), angVel.z())\r\n\r\n          this.createDebrisFromBreakableObject(fragment, threeObject0)\r\n        }\r\n\r\n        this.objectsToRemove[this.numObjectsToRemove++] = threeObject0\r\n      }\r\n\r\n      // threeObject1\r\n      if (breakable1 && maxImpulse > fractureImpulse1 && threeObject1.fragmentDepth < MAX_FRAGMENT_DEPTH) {\r\n        const debris = this.convexBreaker.subdivideByImpact(threeObject1, this.impactPoint, this.impactNormal, 1, 2) //, 1.5)\r\n\r\n        const numObjects = debris.length\r\n        for (let j = 0; j < numObjects; j++) {\r\n          const vel = rb1.getLinearVelocity()\r\n          const angVel = rb1.getAngularVelocity()\r\n          const fragment = debris[j] as ExtendedObject3D\r\n          fragment.userData.ammoPhysicsData.velocity.set(vel.x(), vel.y(), vel.z())\r\n          fragment.userData.ammoPhysicsData.angularVelocity.set(angVel.x(), angVel.y(), angVel.z())\r\n\r\n          this.createDebrisFromBreakableObject(fragment, threeObject1)\r\n        }\r\n\r\n        this.objectsToRemove[this.numObjectsToRemove++] = threeObject1\r\n      }\r\n    }\r\n\r\n    // remove objects\r\n    for (let i = 0; i < this.numObjectsToRemove; i++) {\r\n      this.removeDebris(this.objectsToRemove[i])\r\n    }\r\n    this.numObjectsToRemove = 0\r\n\r\n    // handle collision end events\r\n    this.earlierDetectedCollisions.forEach(el => {\r\n      const { combinedName } = el\r\n      if (!detectedCollisions.find(el => el.combinedName === combinedName)) {\r\n        const split = combinedName.split('__')\r\n        const obj0 = this.rigidBodies.find(obj => obj.name === split[0])\r\n        const obj1 = this.rigidBodies.find(obj => obj.name === split[1])\r\n        const event = 'end'\r\n        if (obj0 && obj1) this.collisionEvents.emit('collision', { bodies: [obj0, obj1], event })\r\n      }\r\n    })\r\n    this.earlierDetectedCollisions = [...detectedCollisions]\r\n  }\r\n\r\n  public setGravity(x = 0, y = -9.8, z = 0) {\r\n    this.tmpBtVector3.setValue(x, y, z)\r\n    this.physicsWorld.setGravity(this.tmpBtVector3)\r\n  }\r\n\r\n  public get debug() {\r\n    if (this.isHeadless) return null\r\n\r\n    return {\r\n      enable: () => {\r\n        this.debugDrawer.enable()\r\n      },\r\n      mode: (debugMode: number = 1) => {\r\n        this.debugDrawer.setDebugMode(debugMode)\r\n      },\r\n      disable: () => {\r\n        this.debugDrawer.disable()\r\n      }\r\n    }\r\n  }\r\n\r\n  private start() {\r\n    if (typeof Ammo === 'undefined') {\r\n      logger('Are you sure you included ammo.js?')\r\n      return\r\n    }\r\n\r\n    if (typeof Ammo === 'function')\r\n      Ammo().then(() => {\r\n        this.setup()\r\n      })\r\n    else this.setup()\r\n  }\r\n\r\n  public get add() {\r\n    return {\r\n      collider: (\r\n        object1: ExtendedObject3D,\r\n        object2: ExtendedObject3D,\r\n        eventCallback: (event: Types.CollisionEvent) => void\r\n      ) => this.collisionEvents.addCollider(object1, object2, eventCallback),\r\n      constraints: this.constraints.addConstraints,\r\n      existing: (object: ExtendedObject3D, config?: Types.AddExistingConfig) => this.addExisting(object, config),\r\n      plane: (planeConfig: Types.PlaneConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addPlane(planeConfig, materialConfig),\r\n      sphere: (sphereConfig: Types.SphereConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addSphere(sphereConfig, materialConfig),\r\n      ground: (groundConfig: Types.GroundConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addGround(groundConfig, materialConfig),\r\n      box: (boxConfig: Types.BoxConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addBox(boxConfig, materialConfig),\r\n      cylinder: (cylinderConfig: Types.CylinderConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addCylinder(cylinderConfig, materialConfig),\r\n      cone: (coneConfig: Types.ConeConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addCone(coneConfig, materialConfig),\r\n      torus: (torusConfig: Types.TorusConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addTorus(torusConfig, materialConfig),\r\n      extrude: (extrudeConfig: Types.ExtrudeConfig, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addExtrude(extrudeConfig, materialConfig),\r\n      /**\r\n       * Creates a new Raycaster\r\n       * @param type Returns only the closes body by default. Can be 'closest' or 'allHits'.\r\n       */\r\n      raycaster: (type = 'closest') => {\r\n        if (type === 'closest') return new ClosestRaycaster(this) as ClosestRaycaster\r\n        else return new AllHitsRaycaster(this) as AllHitsRaycaster\r\n      }\r\n    }\r\n  }\r\n\r\n  private prepareThreeObjectForCollisionShape(object: ExtendedObject3D, config: Types.AddExistingConfig = {}) {\r\n    const { autoCenter = false } = config\r\n\r\n    // set default params\r\n    const defaultParams = {\r\n      width: 1,\r\n      height: 1,\r\n      depth: 1,\r\n      radius: 1,\r\n      radiusTop: 1, // for the cylinder\r\n      radiusBottom: 1, // for the cylinder\r\n      tube: 0.4, // for the torus\r\n      tubularSegments: 6 // for the torus\r\n    }\r\n\r\n    // determine the shape (fallback to hacd)\r\n    let shape: string = 'unknown'\r\n    // retrieve the shape from the geometry\r\n    const type = object.geometry?.type || 'unknown'\r\n    if (/box/i.test(type)) shape = 'box'\r\n    else if (/cone/i.test(type)) shape = 'cone'\r\n    else if (/cylinder/i.test(type)) shape = 'cylinder'\r\n    else if (/extrude/i.test(type)) shape = 'extrude'\r\n    else if (/plane/i.test(type)) shape = 'plane'\r\n    else if (/sphere/i.test(type)) shape = 'sphere'\r\n    else if (/torus/i.test(type)) shape = 'torus'\r\n\r\n    // @ts-ignore\r\n    let params = { ...defaultParams, ...object?.geometry?.parameters }\r\n\r\n    if (config.shape) {\r\n      params = { ...defaultParams, ...config }\r\n      shape = config.shape\r\n    } else if (object.shape) {\r\n      shape = object.shape\r\n    }\r\n\r\n    // Add all default params if undefined\r\n    Object.keys(params).forEach(key => {\r\n      // @ts-ignore\r\n      if (typeof params[key] === 'undefined' && defaultParams[key]) {\r\n        // @ts-ignore\r\n        params[key] = defaultParams[key]\r\n      }\r\n    })\r\n\r\n    // auto adjust the center for custom shapes\r\n    if (autoCenter) object.geometry.center()\r\n\r\n    // adjust the cylinder radius for its physcis body\r\n    if (shape === 'cylinder') params.radius = config.radius || params.radiusTop\r\n\r\n    // some aliases\r\n    if (shape === 'extrude') shape = 'hacd'\r\n    if (shape === 'mesh' || shape === 'convex') shape = 'convexMesh'\r\n    if (shape === 'concave') shape = 'concaveMesh'\r\n\r\n    // if we have not found a shape until here, we fallback to 'box'\r\n    if (shape === 'unknown') {\r\n      logger(`Shape for ${object?.name} not recognized! Will fallback to box.`)\r\n      shape = 'box'\r\n    }\r\n\r\n    return { shape, params, object }\r\n  }\r\n\r\n  public createCollisionShape(shape: string, params: any, object?: ExtendedObject3D): Ammo.btCollisionShape {\r\n    const quat = object?.quaternion ? object?.quaternion : new Quaternion(0, 0, 0, 1)\r\n    const { axis = 'y' } = params\r\n\r\n    const btHalfExtents = new Ammo.btVector3()\r\n\r\n    // transform geometry to bufferGeometry (because three-to-ammo works only with bufferGeometry)\r\n    // @ts-ignore\r\n    const geometry = object?.geometry as Geometry\r\n    if (object && geometry?.isGeometry) {\r\n      // @ts-ignore\r\n      object.geometry = new BufferGeometry().fromGeometry(geometry)\r\n    }\r\n\r\n    // prepare data to pass to three-to-ammo.js\r\n    const extractData = (object: any) => {\r\n      const matrixWorld = new Matrix4().elements\r\n      const vertices: any[] = []\r\n      const matrices: any[] = []\r\n      const indexes: any[] = []\r\n      iterateGeometries(object, {}, (vertexArray: any, matrixArray: any, indexArray: any) => {\r\n        vertices.push(vertexArray)\r\n        matrices.push(matrixArray)\r\n        indexes.push(indexArray)\r\n      })\r\n\r\n      return { vertices, matrices, indexes, matrixWorld }\r\n    }\r\n\r\n    let d = {} as any\r\n    // extract data for complex shapes generated with three-to-ammo.js\r\n    if (this.complexShapes.indexOf(shape) !== -1) d = extractData(object)\r\n\r\n    let collisionShape\r\n    switch (shape) {\r\n      case 'box':\r\n        btHalfExtents.setValue(params.width / 2, params.height / 2, params.depth / 2)\r\n        collisionShape = new Ammo.btBoxShape(btHalfExtents)\r\n        break\r\n      case 'sphere':\r\n        collisionShape = new Ammo.btSphereShape(params.radius)\r\n        break\r\n      case 'cylinder':\r\n        switch (axis) {\r\n          case 'y':\r\n            btHalfExtents.setValue(params.radius, params.height / 2, params.radius)\r\n            collisionShape = new Ammo.btCylinderShape(btHalfExtents)\r\n            break\r\n          case 'x':\r\n            btHalfExtents.setValue(params.height / 2, params.radius, params.radius)\r\n            collisionShape = new Ammo.btCylinderShapeX(btHalfExtents)\r\n            break\r\n          case 'z':\r\n            btHalfExtents.setValue(params.radius, params.radius, params.height / 2)\r\n            collisionShape = new Ammo.btCylinderShapeZ(btHalfExtents)\r\n            break\r\n        }\r\n        break\r\n      case 'cone':\r\n        switch (axis) {\r\n          case 'y':\r\n            collisionShape = new Ammo.btConeShape(params.radius, params.height)\r\n            break\r\n          case 'x':\r\n            collisionShape = new Ammo.btConeShapeX(params.radius, params.height)\r\n            break\r\n          case 'z':\r\n            collisionShape = new Ammo.btConeShapeZ(params.radius, params.height)\r\n            break\r\n        }\r\n        break\r\n      case 'capsule':\r\n        switch (axis) {\r\n          case 'y':\r\n            collisionShape = new Ammo.btCapsuleShape(params.radius, params.height)\r\n            break\r\n          case 'x':\r\n            collisionShape = new Ammo.btCapsuleShapeX(params.radius, params.height)\r\n            break\r\n          case 'z':\r\n            collisionShape = new Ammo.btCapsuleShapeZ(params.radius, params.height)\r\n            break\r\n        }\r\n        break\r\n      case 'torus':\r\n        collisionShape = createTorusShape(params, quat)\r\n        break\r\n      case 'plane':\r\n        // uses a triMeshShape for the plane\r\n        collisionShape = createTriMeshShape(d.vertices, d.matrices, d.indexes, d.matrixWorld, {\r\n          ...params,\r\n          concave: false\r\n        })\r\n        break\r\n      case 'hull':\r\n        collisionShape = createHullShape(d.vertices, d.matrices, d.matrixWorld, params)\r\n        break\r\n      case 'hacd':\r\n        collisionShape = createHACDShapes(d.vertices, d.matrices, d.indexes, d.matrixWorld, params)\r\n        break\r\n      case 'vhacd':\r\n        collisionShape = createVHACDShapes(d.vertices, d.matrices, d.indexes, d.matrixWorld, params)\r\n        break\r\n      case 'convexMesh':\r\n        collisionShape = createTriMeshShape(d.vertices, d.matrices, d.indexes, d.matrixWorld, {\r\n          ...params,\r\n          concave: false\r\n        })\r\n        break\r\n      case 'concaveMesh':\r\n        collisionShape = createTriMeshShape(d.vertices, d.matrices, d.indexes, d.matrixWorld, {\r\n          ...params,\r\n          concave: true\r\n        })\r\n        break\r\n    }\r\n\r\n    Ammo.destroy(btHalfExtents)\r\n\r\n    // if there is a x, y or z, take is as temporary offset parameter\r\n    const { x, y, z } = params\r\n    if (x || y || z) {\r\n      // @ts-ignore\r\n      collisionShape._compoundOffset = { x: x || 0, y: y || 0, z: z || 0 }\r\n    }\r\n\r\n    // in some cases, like hacd, it will be an array of shapes\r\n    // so we merge them\r\n    if (Array.isArray(collisionShape)) collisionShape = this.mergeCollisionShapesToCompoundShape(collisionShape)\r\n\r\n    return collisionShape as Ammo.btCollisionShape\r\n  }\r\n\r\n  public mergeCollisionShapesToCompoundShape(collisionShapes: Ammo.btCollisionShape[]): Ammo.btCompoundShape {\r\n    const compoundShape = new Ammo.btCompoundShape()\r\n    collisionShapes.forEach(shape => {\r\n      // @ts-ignore // some custom parameter\r\n      const { _childOffset, _compoundOffset } = shape\r\n\r\n      if (_childOffset) {\r\n        const { pos, quat, scale, margin } = _childOffset\r\n        const transform = this.applyPosQuatScaleMargin(shape, pos, quat, scale, margin)\r\n        compoundShape.addChildShape(transform, shape)\r\n      } else if (_compoundOffset) {\r\n        const transform = new Ammo.btTransform()\r\n        transform.setIdentity()\r\n        transform.setOrigin(new Ammo.btVector3(_compoundOffset.x, _compoundOffset.y, _compoundOffset.z))\r\n        compoundShape.addChildShape(transform, shape)\r\n      } else {\r\n        const transform = new Ammo.btTransform()\r\n        transform.setIdentity()\r\n        compoundShape.addChildShape(transform, shape)\r\n      }\r\n    })\r\n    return compoundShape\r\n  }\r\n\r\n  protected addExisting(object: ExtendedObject3D, config: Types.AddExistingConfig = {}): any {\r\n    const { hasBody } = object\r\n    if (hasBody) {\r\n      logger(`Object \"${object.name}\" already has a physical body!`)\r\n      return\r\n    }\r\n\r\n    const pos = new Vector3()\r\n    const quat = new Quaternion()\r\n    const scale = new Vector3()\r\n    object.getWorldPosition(pos)\r\n    object.getWorldQuaternion(quat)\r\n    object.getWorldScale(scale)\r\n\r\n    const isStaticObject = (config.collisionFlags || 0).toString(2).slice(-1) === '1'\r\n    const isKinematicObject = (config.collisionFlags || 0).toString(2).slice(-2, -1) === '1'\r\n\r\n    const {\r\n      shape = 'unknown',\r\n      compound = [],\r\n      mass = isStaticObject || isKinematicObject ? 0 : 1, // set default mass of 0 for static objects, and 1 for all other objects\r\n      collisionFlags = 0,\r\n      collisionGroup = 1,\r\n      collisionMask = -1,\r\n      offset = undefined,\r\n      breakable = false,\r\n      addChildren = true,\r\n      margin = 0.01,\r\n      ignoreScale = false,\r\n      fractureImpulse = 1\r\n    } = config\r\n\r\n    if (ignoreScale) scale.set(1, 1, 1)\r\n\r\n    if (compound.length >= 1) {\r\n      // if we want a custom compound shape, we simply do\r\n      const collisionShapes = compound.map((s: any) => this.createCollisionShape(s.shape, s))\r\n      const compoundShape = this.mergeCollisionShapesToCompoundShape(collisionShapes)\r\n      const localTransform = this.applyPosQuatScaleMargin(compoundShape, pos, quat, scale, margin)\r\n      const rigidBody = this.collisionShapeToRigidBody(compoundShape, localTransform, mass, isKinematicObject)\r\n      this.addRigidBodyToWorld(object, rigidBody, collisionFlags, collisionGroup, collisionMask, offset)\r\n      object.body.breakable = breakable\r\n      object.body.fractureImpulse = fractureImpulse\r\n      object.body.ignoreScale = ignoreScale\r\n      return\r\n    }\r\n\r\n    const collisionShapes: Ammo.btCollisionShape[] = []\r\n\r\n    // if object is a THREE.Group, object does not have a mesh\r\n    if (shape !== 'unknown' || object.isMesh) {\r\n      const p = this.prepareThreeObjectForCollisionShape(object, config)\r\n      const cs = this.createCollisionShape(p.shape, p.params, p.object)\r\n      collisionShapes.push(cs)\r\n    }\r\n\r\n    // check if the object has children\r\n    if (shape === 'unknown' && addChildren && object.children.length >= 1) {\r\n      object.children.forEach((child: any) => {\r\n        if (child.isMesh) {\r\n          const p = this.prepareThreeObjectForCollisionShape(child)\r\n          const cs = this.createCollisionShape(p.shape, p.params, p.object)\r\n\r\n          // @ts-ignore // the relative pos, quat and scale to its parent\r\n          cs._childOffset = {\r\n            pos: child.position.clone(),\r\n            quat: child.quaternion.clone(),\r\n            scale: child.scale.clone(),\r\n            margin: margin\r\n          }\r\n\r\n          collisionShapes.push(cs)\r\n        }\r\n      })\r\n    }\r\n\r\n    // FALLBACK: if we do not have any collisionShapes yet, add a simple box as a fallback\r\n    if (collisionShapes.length === 0) {\r\n      const p = this.prepareThreeObjectForCollisionShape(object, config)\r\n      const cs = this.createCollisionShape(p.shape, p.params, p.object)\r\n      collisionShapes.push(cs)\r\n    }\r\n\r\n    const collisionShape =\r\n      collisionShapes.length === 1 ? collisionShapes[0] : this.mergeCollisionShapesToCompoundShape(collisionShapes)\r\n\r\n    // add rigid body\r\n    // object.position.copy(pos)\r\n    // object.quaternion.copy(quat)\r\n\r\n    const localTransform = this.applyPosQuatScaleMargin(collisionShape, pos, quat, scale, margin)\r\n    const rigidBody = this.collisionShapeToRigidBody(collisionShape, localTransform, mass, isKinematicObject)\r\n\r\n    this.addRigidBodyToWorld(object, rigidBody, collisionFlags, collisionGroup, collisionMask, offset)\r\n    object.body.breakable = breakable\r\n    object.body.fractureImpulse = fractureImpulse\r\n    object.body.ignoreScale = ignoreScale\r\n  }\r\n\r\n  public addRigidBodyToWorld(\r\n    object: ExtendedObject3D,\r\n    rigidBody: Ammo.btRigidBody,\r\n    collisionFlags: number,\r\n    collisionGroup: number,\r\n    collisionMask: number,\r\n    offset?: { x?: number; y?: number; z?: number }\r\n  ) {\r\n    this.rigidBodies.push(object)\r\n    this.physicsWorld.addRigidBody(rigidBody, collisionGroup, collisionMask)\r\n\r\n    const ptr = Object.values(rigidBody)[0]\r\n    if (!object.name) object.name = `object-${object.id}`\r\n    // @ts-ignore\r\n    rigidBody.name = object.name\r\n    object.body = new PhysicsBody(this, rigidBody)\r\n    object.hasBody = true\r\n    // @ts-ignore\r\n    object.ptr = ptr\r\n    // @ts-ignore\r\n    rigidBody.threeObject = object\r\n\r\n    if (offset) object.body.offset = { x: 0, y: 0, z: 0, ...offset }\r\n\r\n    object.body.setCollisionFlags(collisionFlags)\r\n  }\r\n\r\n  public applyPosQuatScaleMargin(\r\n    collisionShape: Ammo.btCollisionShape,\r\n    pos: Vector3 = new Vector3(),\r\n    quat: Quaternion = new Quaternion(),\r\n    scale: Vector3 = new Vector3(),\r\n    margin: number = 0.01\r\n  ) {\r\n    collisionShape.setMargin(margin)\r\n\r\n    const rotation = new Ammo.btQuaternion(0, 0, 0, 1)\r\n    rotation.setValue(quat.x, quat.y, quat.z, quat.w)\r\n\r\n    const localTransform = new Ammo.btTransform()\r\n    localTransform.setIdentity()\r\n    localTransform.getOrigin().setValue(pos.x, pos.y, pos.z)\r\n    localTransform.setRotation(rotation)\r\n\r\n    Ammo.destroy(rotation)\r\n\r\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\r\n    collisionShape.setLocalScaling(localScale)\r\n    Ammo.destroy(localScale)\r\n\r\n    return localTransform\r\n  }\r\n\r\n  public collisionShapeToRigidBody(\r\n    collisionShape: Ammo.btCollisionShape,\r\n    localTransform: Ammo.btTransform,\r\n    mass: number,\r\n    disableDeactivation: boolean\r\n  ) {\r\n    const motionState = new Ammo.btDefaultMotionState(localTransform)\r\n    const localInertia = new Ammo.btVector3(0, 0, 0)\r\n    if (mass > 0) collisionShape.calculateLocalInertia(mass, localInertia)\r\n    const rbInfo = new Ammo.btRigidBodyConstructionInfo(mass, motionState, collisionShape, localInertia)\r\n    const rigidBody = new Ammo.btRigidBody(rbInfo)\r\n    if (mass > 0 || disableDeactivation) rigidBody.setActivationState(4) // Disable deactivation\r\n    return rigidBody\r\n  }\r\n}\r\n\r\nexport { AmmoPhysics }\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport {\r\n  AddExistingConfig,\r\n  BoxConfig,\r\n  ConeConfig,\r\n  CylinderConfig,\r\n  ExtendedObject3D,\r\n  ExtrudeConfig,\r\n  GroundConfig,\r\n  MaterialConfig,\r\n  PlaneConfig,\r\n  SphereConfig,\r\n  TorusConfig\r\n} from '@enable3d/common/dist/types'\r\nimport Factories from '@enable3d/common/dist/factories'\r\n\r\nclass Shapes {\r\n  constructor(\r\n    private factory: Factories,\r\n    private addExisting: (object: ExtendedObject3D, config?: AddExistingConfig) => void\r\n  ) {}\r\n\r\n  public addPlane(planeConfig: PlaneConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const plane = this.factory.add.plane(planeConfig, materialConfig)\r\n    this.addExisting(plane, planeConfig)\r\n    return plane\r\n  }\r\n\r\n  public addSphere(sphereConfig: SphereConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const sphere = this.factory.add.sphere(sphereConfig, materialConfig)\r\n    this.addExisting(sphere, sphereConfig)\r\n    return sphere\r\n  }\r\n\r\n  public addBox(boxConfig: BoxConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const box = this.factory.add.box(boxConfig, materialConfig)\r\n    this.addExisting(box, boxConfig)\r\n    return box\r\n  }\r\n\r\n  public addGround(groundConfig: GroundConfig, materialConfig: MaterialConfig = {}) {\r\n    const ground = this.factory.add.ground(groundConfig, materialConfig)\r\n    const config = { ...groundConfig, mass: 0, collisionFlags: 1 }\r\n    this.addExisting(ground, config)\r\n    return ground\r\n  }\r\n\r\n  public addCylinder(cylinderConfig: CylinderConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const cylinder = this.factory.add.cylinder(cylinderConfig, materialConfig)\r\n    this.addExisting(cylinder, cylinderConfig)\r\n    return cylinder\r\n  }\r\n\r\n  public addCone(coneConfig: ConeConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const cone = this.factory.add.cone(coneConfig, materialConfig)\r\n    this.addExisting(cone, coneConfig)\r\n    return cone\r\n  }\r\n\r\n  public addTorus(torusConfig: TorusConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const torus = this.factory.add.torus(torusConfig, materialConfig)\r\n    this.addExisting(torus, torusConfig)\r\n    return torus\r\n  }\r\n\r\n  public addExtrude(extrudeConfig: ExtrudeConfig, materialConfig: MaterialConfig = {}) {\r\n    const object = this.factory.add.extrude(extrudeConfig, materialConfig)\r\n    object.translateX(1)\r\n    this.addExisting(object)\r\n    return object\r\n  }\r\n}\r\n\r\nexport default Shapes\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @description  This is a modified version of the original code from Kevin Lee\r\n */\r\n\r\n/**\r\n * @author       Kevin Lee (https://github.com/InfiniteLee)\r\n * @copyright    Copyright (c) 2019 Kevin Lee; Project Url: https://github.com/InfiniteLee/ammo-debug-drawer\r\n * @license      {@link https://github.com/InfiniteLee/ammo-debug-drawer/blob/master/LICENSE|MPL-2.0}\r\n */\r\n\r\nimport { BufferAttribute, BufferGeometry, LineBasicMaterial, LineSegments, Scene, StaticDrawUsage } from 'three'\r\n\r\nconst AmmoDebugConstants = {\r\n  NoDebug: 0,\r\n  DrawWireframe: 1,\r\n  DrawAabb: 2,\r\n  DrawFeaturesText: 4,\r\n  DrawContactPoints: 8,\r\n  NoDeactivation: 16,\r\n  NoHelpText: 32,\r\n  DrawText: 64,\r\n  ProfileTimings: 128,\r\n  EnableSatComparison: 256,\r\n  DisableBulletLCP: 512,\r\n  EnableCCD: 1024,\r\n  DrawConstraints: 1 << 11, //2048\r\n  DrawConstraintLimits: 1 << 12, //4096\r\n  FastWireframe: 1 << 13, //8192\r\n  DrawNormals: 1 << 14, //16384\r\n  DrawOnTop: 1 << 15, //32768\r\n  MAX_DEBUG_DRAW_MODE: 0xffffffff\r\n}\r\n\r\n/**\r\n * An implementation of the btIDebugDraw interface in Ammo.js, for debug rendering of Ammo shapes\r\n */\r\nclass DebugDrawer {\r\n  debugDrawMode: number\r\n  geometry: BufferGeometry\r\n  index: number\r\n  mesh: LineSegments\r\n  enabled: boolean\r\n  debugDrawer: Ammo.DebugDrawer\r\n  warnedOnce: boolean\r\n  constructor(public scene: Scene, public world: Ammo.btCollisionWorld, public options: any = {}) {\r\n    this.debugDrawMode = options.debugDrawMode || AmmoDebugConstants.DrawWireframe\r\n    const drawOnTop = this.debugDrawMode & AmmoDebugConstants.DrawOnTop || false\r\n    const maxBufferSize = options.maxBufferSize || 1000000\r\n\r\n    this.geometry = new BufferGeometry()\r\n    const vertices = new Float32Array(maxBufferSize * 3)\r\n    const colors = new Float32Array(maxBufferSize * 3)\r\n\r\n    /*\r\n    I do not know the difference, just using the first one.\r\n    export const StaticDrawUsage: Usage;\r\n    export const DynamicDrawUsage: Usage;\r\n    export const StreamDrawUsage: Usage;\r\n    export const StaticReadUsage: Usage;\r\n    export const DynamicReadUsage: Usage;\r\n    export const StreamReadUsage: Usage;\r\n    export const StaticCopyUsage: Usage;\r\n    export const DynamicCopyUsage: Usage;\r\n    export const StreamCopyUsage: Usage;\r\n     */\r\n    this.geometry.setAttribute('position', new BufferAttribute(vertices, 3).setUsage(StaticDrawUsage))\r\n    this.geometry.setAttribute('color', new BufferAttribute(colors, 3).setUsage(StaticDrawUsage))\r\n\r\n    this.index = 0\r\n\r\n    const material = new LineBasicMaterial({\r\n      vertexColors: true,\r\n      depthTest: !drawOnTop\r\n    })\r\n\r\n    this.mesh = new LineSegments(this.geometry, material)\r\n    if (drawOnTop) this.mesh.renderOrder = 999\r\n    this.mesh.frustumCulled = false\r\n\r\n    this.enabled = false\r\n\r\n    this.debugDrawer = new Ammo.DebugDrawer()\r\n    this.debugDrawer.drawLine = this.drawLine.bind(this)\r\n    this.debugDrawer.drawContactPoint = this.drawContactPoint.bind(this)\r\n    this.debugDrawer.reportErrorWarning = this.reportErrorWarning.bind(this)\r\n    this.debugDrawer.draw3dText = this.draw3dText.bind(this)\r\n    this.debugDrawer.setDebugMode = this.setDebugMode.bind(this)\r\n    this.debugDrawer.getDebugMode = this.getDebugMode.bind(this)\r\n\r\n    this.world.setDebugDrawer(this.debugDrawer)\r\n  }\r\n\r\n  enable() {\r\n    this.enabled = true\r\n    this.scene.add(this.mesh)\r\n  }\r\n\r\n  disable() {\r\n    this.enabled = false\r\n    this.scene.remove(this.mesh)\r\n  }\r\n\r\n  update() {\r\n    if (!this.enabled) {\r\n      return\r\n    }\r\n\r\n    if (this.index != 0) {\r\n      // @ts-ignore\r\n      this.geometry.attributes.position.needsUpdate = true\r\n      // @ts-ignore\r\n      this.geometry.attributes.color.needsUpdate = true\r\n    }\r\n\r\n    this.index = 0\r\n    this.world.debugDrawWorld()\r\n    this.geometry.setDrawRange(0, this.index)\r\n  }\r\n\r\n  drawLine(from: any, to: any, color: any) {\r\n    // @ts-ignore\r\n    const heap = Ammo.HEAPF32\r\n    const r = heap[(color + 0) / 4]\r\n    const g = heap[(color + 4) / 4]\r\n    const b = heap[(color + 8) / 4]\r\n\r\n    const fromX = heap[(from + 0) / 4]\r\n    const fromY = heap[(from + 4) / 4]\r\n    const fromZ = heap[(from + 8) / 4]\r\n    this.geometry.attributes.position.setXYZ(this.index, fromX, fromY, fromZ)\r\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\r\n\r\n    const toX = heap[(to + 0) / 4]\r\n    const toY = heap[(to + 4) / 4]\r\n    const toZ = heap[(to + 8) / 4]\r\n    this.geometry.attributes.position.setXYZ(this.index, toX, toY, toZ)\r\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\r\n  }\r\n\r\n  //TODO: figure out how to make lifeTime work\r\n  drawContactPoint(pointOnB: any, normalOnB: any, distance: any, _lifeTime: any, color: any) {\r\n    // @ts-ignore\r\n    const heap = Ammo.HEAPF32\r\n    const r = heap[(color + 0) / 4]\r\n    const g = heap[(color + 4) / 4]\r\n    const b = heap[(color + 8) / 4]\r\n\r\n    const x = heap[(pointOnB + 0) / 4]\r\n    const y = heap[(pointOnB + 4) / 4]\r\n    const z = heap[(pointOnB + 8) / 4]\r\n    this.geometry.attributes.position.setXYZ(this.index, x, y, z)\r\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\r\n\r\n    const dx = heap[(normalOnB + 0) / 4] * distance\r\n    const dy = heap[(normalOnB + 4) / 4] * distance\r\n    const dz = heap[(normalOnB + 8) / 4] * distance\r\n    this.geometry.attributes.position.setXYZ(this.index, x + dx, y + dy, z + dz)\r\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\r\n  }\r\n\r\n  reportErrorWarning(warningString: string) {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (Ammo.hasOwnProperty('Pointer_stringify')) {\r\n      // @ts-ignore\r\n      console.warn(Ammo.Pointer_stringify(warningString))\r\n    } else if (!this.warnedOnce) {\r\n      this.warnedOnce = true\r\n      console.warn(\"Cannot print warningString, please rebuild Ammo.js using 'debug' flag\")\r\n    }\r\n  }\r\n\r\n  draw3dText(_location: any, _textString: any) {\r\n    //TODO\r\n    console.warn('TODO: draw3dText')\r\n  }\r\n\r\n  setDebugMode(debugMode: any) {\r\n    this.debugDrawMode = debugMode\r\n  }\r\n\r\n  getDebugMode() {\r\n    return this.debugDrawMode\r\n  }\r\n}\r\n\r\nexport default DebugDrawer\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { Quaternion } from 'three'\r\n\r\n// https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=7228\r\nexport const createTorusShape = (\r\n  config: { radius: number; tube: number; tubularSegments: number },\r\n  quat: Quaternion\r\n) => {\r\n  const { radius = 1, tube = 0.4, tubularSegments = 8 } = config\r\n\r\n  const SIMD_PI = Math.PI\r\n  const subdivisions = tubularSegments\r\n  const gap = Math.sqrt(2.0 * tube * tube - 2.0 * tube * tube * Math.cos((2.0 * SIMD_PI) / subdivisions))\r\n\r\n  const btHalfExtents = new Ammo.btVector3(tube, SIMD_PI / subdivisions + 0.5 * gap, tube)\r\n  const cylinderShape = new Ammo.btCylinderShape(btHalfExtents)\r\n  cylinderShape.setMargin(0.05)\r\n\r\n  const compoundShape = new Ammo.btCompoundShape()\r\n\r\n  const forward = new Ammo.btVector3(0, 0, 1)\r\n  const side = new Ammo.btVector3(0, radius, 0)\r\n  const rotation = new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w)\r\n\r\n  for (let x = 0; x < subdivisions; x++) {\r\n    const angle = (x * 2.0 * SIMD_PI) / subdivisions\r\n    const position = side.rotate(forward, angle)\r\n    const transform = new Ammo.btTransform()\r\n    rotation.setRotation(forward, angle + Math.PI / 2)\r\n    transform.setIdentity()\r\n    transform.setOrigin(position)\r\n    transform.setRotation(rotation)\r\n    compoundShape.addChildShape(transform, cylinderShape)\r\n  }\r\n\r\n  return compoundShape\r\n}\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nimport { Events } from '@yandeu/events';\r\nimport { Euler, Quaternion } from 'three';\r\nclass PhysicsBody {\r\n    constructor(physics, ammo) {\r\n        this.physics = physics;\r\n        this.ammo = ammo;\r\n        this.ignoreScale = false;\r\n        this.isSoftBody = false;\r\n        this.offset = { x: 0, y: 0, z: 0 };\r\n        this.errors = [];\r\n        this.checkCollisions = false;\r\n        this.breakable = false;\r\n        this.fractureImpulse = 1;\r\n        this.didUpdate = false;\r\n        /** Skip syncing the mesh to the physics body. */\r\n        this.skipUpdate = false;\r\n        this._emitUpdateEvents = false;\r\n        this._needUpdate = false;\r\n        this.tmpEuler = new Euler();\r\n        this.tmpQuaternion = new Quaternion();\r\n        this.tmpBtVector3 = new Ammo.btVector3();\r\n        this.tmpBtVector3_1 = new Ammo.btVector3();\r\n        this.tmpBtQuaternion = new Ammo.btQuaternion(0, 0, 0, 1);\r\n        this.eventEmitter = new Events();\r\n        // @ts-ignore\r\n        this.name = ammo.name;\r\n    }\r\n    /**\r\n     * Don't call this manually! Do physics.destroy() instead.\r\n     */\r\n    destructor() {\r\n        // remove events\r\n        if (this.eventEmitter)\r\n            this.eventEmitter.removeAllListeners();\r\n        // destroy tmp ammo values\r\n        Ammo.destroy(this.tmpBtVector3);\r\n        Ammo.destroy(this.tmpBtVector3_1);\r\n        Ammo.destroy(this.tmpBtQuaternion);\r\n        // destory collision shape\r\n        Ammo.destroy(this.ammo.getCollisionShape());\r\n        // destroy body\r\n        Ammo.destroy(this.ammo);\r\n    }\r\n    setupEventEmitter() {\r\n        if (typeof this.eventEmitter === 'undefined')\r\n            this.eventEmitter = new Events();\r\n    }\r\n    get needUpdate() {\r\n        return this._needUpdate;\r\n    }\r\n    set needUpdate(need) {\r\n        if (!need && this._needUpdate)\r\n            this.didUpdate = true;\r\n        this._needUpdate = need;\r\n    }\r\n    onUpdateEvent(updateCallback, once = false) {\r\n        this.setupEventEmitter();\r\n        this._emitUpdateEvents = true;\r\n        if (once)\r\n            this.eventEmitter.once('update', () => {\r\n                updateCallback();\r\n            });\r\n        else\r\n            this.eventEmitter.on('update', () => {\r\n                updateCallback();\r\n            });\r\n    }\r\n    get on() {\r\n        return {\r\n            update: (updateCallback) => this.onUpdateEvent(updateCallback),\r\n            collision: (collisionCallback) => this.onCollision(collisionCallback)\r\n        };\r\n    }\r\n    get once() {\r\n        return {\r\n            update: (updateCallback) => this.onUpdateEvent(updateCallback, true)\r\n        };\r\n    }\r\n    onCollision(collisionCallback) {\r\n        this.checkCollisions = true;\r\n        this.physics.collisionEvents.on('collision', (data) => {\r\n            const { bodies, event } = data;\r\n            if (bodies[0].name === this.name)\r\n                collisionCallback(bodies[1], event);\r\n            else if (bodies[1].name === this.name)\r\n                collisionCallback(bodies[0], event);\r\n        });\r\n    }\r\n    /** You have to call transform() before you can get or set the body's position or rotation. (for headless mode only) */\r\n    transform() {\r\n        const t = this.physics.worldTransform;\r\n        this.ammo.getMotionState().getWorldTransform(t);\r\n    }\r\n    /** You have to call refresh() after you set the position or rotation of the body. (for headless mode only) */\r\n    refresh() {\r\n        const t = this.physics.worldTransform;\r\n        this.ammo.getMotionState().setWorldTransform(t);\r\n    }\r\n    /** Set the rotation in radians. (for headless mode only) */\r\n    setRotation(x, y, z) {\r\n        const e = this.tmpEuler.set(x, y, z);\r\n        const q = this.tmpQuaternion.set(0, 0, 0, 1);\r\n        q.setFromEuler(e);\r\n        this.tmpBtQuaternion.setValue(0, 0, 0, 1);\r\n        const ammoQuat = this.tmpBtQuaternion;\r\n        ammoQuat.setValue(q.x, q.y, q.z, q.w);\r\n        const t = this.physics.worldTransform;\r\n        t.setRotation(ammoQuat);\r\n    }\r\n    /** Get the rotation in radians. (for headless mode only) */\r\n    get rotation() {\r\n        // https://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n        let x, y, z;\r\n        const t = this.physics.worldTransform;\r\n        const ammoQuat = t.getRotation();\r\n        let q1 = this.tmpQuaternion.set(ammoQuat.x(), ammoQuat.y(), ammoQuat.z(), ammoQuat.w());\r\n        if (q1.w > 1)\r\n            q1 = q1.normalize(); // if w>1 acos and sqrt will produce errors, this cant happen if quaternion is normalized\r\n        const angle = 2 * Math.acos(q1.w);\r\n        const s = Math.sqrt(1 - q1.w * q1.w); // assuming quaternion normalized then w is less than 1, so term always positive.\r\n        if (s < 0.001) {\r\n            // test to avoid divide by zero, s is always positive due to sqrt\r\n            // if s close to zero then direction of axis not important\r\n            x = q1.x; // if it is important that axis is normalized then replace with x=1; y=z=0;\r\n            y = q1.y;\r\n            z = q1.z;\r\n        }\r\n        else {\r\n            x = q1.x / s; // normalized axis\r\n            y = q1.y / s;\r\n            z = q1.z / s;\r\n        }\r\n        return { x: x * angle, y: y * angle, z: z * angle };\r\n    }\r\n    /** Get the quaternion. (for headless mode only) */\r\n    get quaternion() {\r\n        const t = this.physics.worldTransform;\r\n        const q = t.getRotation();\r\n        return { x: q.x(), y: q.y(), z: q.z(), w: q.w() };\r\n    }\r\n    /** Set position. (for headless mode only) */\r\n    setPosition(x, y, z) {\r\n        const t = this.physics.worldTransform;\r\n        t.getOrigin().setValue(x, y, z);\r\n    }\r\n    /** Get position. (for headless mode only) */\r\n    get position() {\r\n        const t = this.physics.worldTransform;\r\n        return { x: t.getOrigin().x(), y: t.getOrigin().y(), z: t.getOrigin().z() };\r\n    }\r\n    get velocity() {\r\n        return {\r\n            x: this.ammo.getLinearVelocity().x(),\r\n            y: this.ammo.getLinearVelocity().y(),\r\n            z: this.ammo.getLinearVelocity().z()\r\n        };\r\n    }\r\n    get angularVelocity() {\r\n        return {\r\n            x: this.ammo.getAngularVelocity().x(),\r\n            y: this.ammo.getAngularVelocity().y(),\r\n            z: this.ammo.getAngularVelocity().z()\r\n        };\r\n    }\r\n    setVelocity(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setVelocityX(value) {\r\n        this.tmpBtVector3.setValue(value, this.velocity.y, this.velocity.z);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setVelocityY(value) {\r\n        this.tmpBtVector3.setValue(this.velocity.x, value, this.velocity.z);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setVelocityZ(value) {\r\n        this.tmpBtVector3.setValue(this.velocity.x, this.velocity.y, value);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocity(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocityX(value) {\r\n        this.tmpBtVector3.setValue(value, this.angularVelocity.y, this.angularVelocity.z);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocityY(value) {\r\n        this.tmpBtVector3.setValue(this.angularVelocity.x, value, this.angularVelocity.z);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocityZ(value) {\r\n        this.tmpBtVector3.setValue(this.angularVelocity.x, this.angularVelocity.y, value);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    // Apply Force methods\r\n    applyForce(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyForceX(value) {\r\n        this.tmpBtVector3.setValue(value, 0, 0);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyForceY(value) {\r\n        this.tmpBtVector3.setValue(0, value, 0);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyForceZ(value) {\r\n        this.tmpBtVector3.setValue(0, 0, value);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    // Apply \"Something\" Methods\r\n    applyCentralForce(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralForce(this.tmpBtVector3);\r\n    }\r\n    applyCentralImpulse(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyCentralLocalForce(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralLocalForce(this.tmpBtVector3);\r\n    }\r\n    applyImpulse(impulse, relativePosition) {\r\n        this.tmpBtVector3.setValue(impulse.x || 0, impulse.y || 0, impulse.z || 0);\r\n        this.tmpBtVector3_1.setValue(relativePosition.x || 0, relativePosition.y || 0, relativePosition.z || 0);\r\n        this.ammo.applyImpulse(this.tmpBtVector3, this.tmpBtVector3_1);\r\n    }\r\n    applyLocalTorque(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyLocalTorque(this.tmpBtVector3);\r\n    }\r\n    applyTorque(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyTorque(this.tmpBtVector3);\r\n    }\r\n    applyTorqueImpulse(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyTorqueImpulse(this.tmpBtVector3);\r\n    }\r\n    /**\r\n     * Add the collision flags\r\n     * @param value 0 is DYNAMIC, 1 is STATIC, 2 is KINEMATIC, 4 GHOST\r\n     */\r\n    // https://github.com/bulletphysics/bullet3/blob/aae8048722f2596f7e2bdd52d2a1dcb52a218f2b/src/BulletCollision/CollisionDispatch/btCollisionObject.h#L128\r\n    setCollisionFlags(value) {\r\n        this.ammo.setCollisionFlags(value);\r\n    }\r\n    /**\r\n     * Get the collision flags\r\n     * @param value 0 is DYNAMIC, 1 is STATIC, 2 is KINEMATIC, 4 GHOST\r\n     */\r\n    getCollisionFlags() {\r\n        return this.ammo.getCollisionFlags();\r\n    }\r\n    /**\r\n     * Set the restitution (same as bounciness)\r\n     * @param value A number from 0 to 1.\r\n     */\r\n    setRestitution(value) {\r\n        this.ammo.setRestitution(value);\r\n    }\r\n    /**\r\n     * Set the bounciness (same as restitution)\r\n     * @param value A number from 0 to 1.\r\n     */\r\n    setBounciness(value) {\r\n        this.setRestitution(value);\r\n    }\r\n    /**\r\n     * Set the friction\r\n     * @param value A number from 0 to 1.\r\n     */\r\n    setFriction(value) {\r\n        this.ammo.setFriction(value);\r\n    }\r\n    /**\r\n     * Set the linear and angular damping\r\n     * @param linear A number from 0 to 1.\r\n     * @param angular A number from 0 to 1.\r\n     */\r\n    setDamping(linear, angular) {\r\n        this.ammo.setDamping(linear, angular);\r\n    }\r\n    /** Set per body gravity */\r\n    setGravity(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setGravity(this.tmpBtVector3);\r\n    }\r\n    setLinearFactor(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setLinearFactor(this.tmpBtVector3);\r\n    }\r\n    setAngularFactor(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setAngularFactor(this.tmpBtVector3);\r\n    }\r\n    setCcdMotionThreshold(threshold) {\r\n        this.ammo.setCcdMotionThreshold(threshold);\r\n    }\r\n    setCcdSweptSphereRadius(radius) {\r\n        this.ammo.setCcdSweptSphereRadius(radius);\r\n    }\r\n}\r\nexport default PhysicsBody;\r\n//# sourceMappingURL=physicsBody.js.map"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__824__","__WEBPACK_EXTERNAL_MODULE__399__","__spreadArray","this","to","from","i","il","length","j","Object","defineProperty","value","Events","version_1","EE","fn","context","once","addListener","emitter","event","TypeError","listener","_events","has","get","set","push","_eventsCount","clearEvent","Map","delete","VERSION","enumerable","configurable","prototype","eventNames","Array","keys","listeners","handlers","l","ee","listenerCount","emit","_a","_b","args","_i","arguments","removeListener","undefined","call","apply","length_1","on","events","removeAllListeners","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","key","o","obj","prop","hasOwnProperty","r","Symbol","toStringTag","loggerCache","logger","msg","error","count","console","warn","ExtendedObject3D","Object3D","constructor","super","isExtendedObject3D","isGroup","vector3","Vector3","hasBody","fragmentDepth","breakable","fractureImpulse","_currentAnimation","_animationActions","name","id","world","theta","worldTheta","phi","worldPhi","getWorldDirection","Math","atan2","x","z","acos","y","animationMixer","_animationMixer","AnimationMixer","anims","current","add","animation","_animsAdd","_animsGet","play","transitionDuration","loop","_animsPlay","mixer","clipAction","action","next","reset","crossFadeFrom","clampWhenFinished","setLoop","LoopOnce","setAction","traverse","callback","traverseVisible","traverseAncestors","ExtendedMesh","Mesh","geometry","material","isExtendedMesh","ExtendedGroup","Group","isExtendedGroup","isMesh","Constraints","worldTransform","physicsWorld","tmpBtVector3","Ammo","btVector3","toAmmoV3","v","addConstraints","lock","bodyA","bodyB","disableCollisionsBetweenLinkedBodies","fixed","pointToPoint","config","hinge","slider","spring","coneTwist","frameA","frameB","dof","getTransform","offset","center","transformB","btTransform","setIdentity","v1","getWorldTransform","getOrigin","v2","dx","dy","dz","setOrigin","transformA","getCenterOfMassTransform","inverse","op_mul","zero","angularLowerLimit","angularUpperLimit","transform","ammo","setRotation","getRotation","constraint","btFixedConstraint","addConstraint","pivotA","pivotB","pivotV3","targetPivotV3","btPoint2PointConstraint","axisA","axisB","axisV3","targetAxisV3","btHingeConstraint","linearLowerLimit","lll","linearUpperLimit","lul","all","aul","rotationA","setEulerZYX","rotationB","btSliderConstraint","setLowerLinLimit","setUpperLinLimit","setLowerAngLimit","setUpperAngLimit","stiffness","damping","angularLock","enableSpring","off","btGeneric6DofSpringConstraint","setValue","setLinearLowerLimit","setLinearUpperLimit","setAngularLowerLimit","setAngularUpperLimit","log","PI","setStiffness","setDamping","rbAFrame","rbBFrame","btConeTwistConstraint","setAngularOnly","btGeneric6DofConstraint","destroy","TYPE","FIT","createHullShape","vertex","matrix","Matrix4","vertices","matrices","matrixWorld","options","type","_setOptions","fit","bounds","_computeBounds","btVertex","originalHull","btConvexHullShape","setMargin","margin","addVectors","max","min","multiplyScalar","vertexCount","maxVertices","hullMaxVertices","p","components","fromArray","isLastVertex","random","applyMatrix4","sub","addPoint","collisionShape","getNumVertices","shapeHull","btShapeHull","buildHull","getPointer","getVertexPointer","numVertices","_finishCollisionShape","_computeScale","createHACDShapes","vector","indexes","scale","triCount","hacd","HACD","SetCompacityWeight","compacityWeight","SetVolumeWeight","volumeWeight","SetNClusters","nClusters","SetNVerticesPerCH","nVerticesPerCH","SetConcavity","concavity","points","_malloc","triangles","SetPoints","SetTriangles","SetNPoints","SetNTriangles","pptr","tptr","HEAPF64","indices","HEAP32","Compute","_free","GetNClusters","shapes","hull","nPoints","GetNPointsCH","nTriangles","GetNTrianglesCH","hullPoints","hullTriangles","GetCH","pi","px","py","pz","createVHACDShapes","vhacd","VHACD","params","Parameters","set_m_resolution","resolution","set_m_depth","depth","set_m_concavity","set_m_planeDownsampling","planeDownsampling","set_m_convexhullDownsampling","convexhullDownsampling","set_m_alpha","alpha","set_m_beta","beta","set_m_gamma","gamma","set_m_pca","pca","set_m_mode","mode","set_m_maxNumVerticesPerCH","maxNumVerticesPerCH","set_m_minVolumePerCH","minVolumePerCH","set_m_convexhullApproximation","convexhullApproximation","set_m_oclAcceleration","oclAcceleration","nHulls","GetNConvexHulls","ch","ConvexHull","GetConvexHull","get_m_nPoints","get_m_points","createTriMeshShape","va","vb","vc","bta","btb","btc","triMesh","btTriangleMesh","index","ai","bi","ci","addTriangle","localScale","setScaling","concave","btBvhTriangleMeshShape","btConvexTriangleMeshShape","resources","iterateGeometries","cb","parseInt","REVISION","copy","invert","getInverse","setFromMatrixScale","mesh","includeInvisible","el","object3D","visible","identity","updateWorldMatrix","multiplyMatrices","isBufferGeometry","attributes","position","array","elements","Box3","minX","minY","minZ","maxX","maxY","maxZ","_iterateVertices","_defaultMaterial","MeshLambertMaterial","color","__rest","s","e","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Factories","scene","isHeadless","defaultMaterial","make","plane","planeConfig","materialConfig","makePlane","box","boxConfig","makeBox","sphere","sphereConfig","makeSphere","cylinder","cylinderConfig","makeCylinder","cone","coneConfig","makeCone","torus","torusConfig","makeTorus","extrude","extrudeConfig","makeExtrude","addMesh","existing","object","addExisting","addPlane","addBox","ground","groundConfig","addGround","addSphere","addCylinder","addCone","addTorus","addExtrude","addMaterial","isArray","createMesh","Line","Points","castShadow","receiveShadow","shape","autoCenter","rest","bevelEnabled","ExtrudeBufferGeometry","assign","PlaneBufferGeometry","width","height","widthSegments","heightSegments","side","DoubleSide","SphereBufferGeometry","radius","phiStart","phiLength","thetaStart","thetaLength","BoxBufferGeometry","depthSegments","rotateX","CylinderBufferGeometry","radiusTop","radiusBottom","radiusSegments","openEnded","ConeBufferGeometry","TorusBufferGeometry","tube","radialSegments","tubularSegments","arc","MeshBasicMaterial","basic","MeshNormalMaterial","normal","MeshStandardMaterial","standard","lambert","MeshPhongMaterial","phong","physical","MeshPhysicalMaterial","MeshToonMaterial","toon","LineBasicMaterial","line","PointsMaterial","custom","CollisionEvents","addCollider","object1","object2","eventCallback","body","checkCollisions","data","bodies","newConvexGeometry","window","THREE","ConvexGeometry","ConvexObjectBreaker","minSizeForBreak","smallDelta","tempLine1","Line3","tempPlane1","Plane","tempPlane2","tempPlane_Cut","tempCM1","tempCM2","tempVector3","tempVector3_2","tempVector3_3","tempVector3_P0","tempVector3_P1","tempVector3_P2","tempVector3_N0","tempVector3_N1","tempVector3_AB","tempVector3_CB","tempResultObjects","segments","prepareBreakableObject","mass","velocity","angularVelocity","userData","ammoPhysicsData","clone","subdivideByImpact","pointOfImpact","maxRadialIterations","maxRandomIterations","debris","setFromCoplanarPoints","maxTotalIterations","scope","subdivideRadial","subObject","startAngle","endAngle","numIterations","angle","constant","applyAxisAngle","cutByPlane","obj1","obj2","output","coords","normals","numPoints","numFaces","getIndex","getVertexIndex","faceIdx","vert","idx","points1","points2","delta","numPointPairs","p0","p1","n0","n1","a1","b1","c1","a2","b2","c2","dot","localPlane","updateMatrix","transformPlaneToLocalSpace","segment","i0","i1","mark0","distanceToPoint","mark1","start","end","intersection","intersectLine","segmentedObject1","segmentedObject2","newMass","radius1","numPoints1","divideScalar","radius2","numPoints2","numObjects","quaternion","transformFreeVector","m","transformFreeVectorInverse","transformTiedVectorInverse","resultPlane","referencePoint","coplanarPoint","wasmSupported","WebAssembly","instantiate","Module","Uint8Array","of","Instance","err","Error","message","path","doneCallback","url","tag","document","createElement","onload","onerror","async","src","head","appendChild","loadScriptAsync","PhysicsLoader","__loadPhysics","then","derivedCtor","baseCtors","forEach","baseCtor","getOwnPropertyNames","getOwnPropertyDescriptor","Raycaster","physics","setRayFromWorld","_btRayFrom","setRayToWorld","_btRayTo","hasHit","_btRayCallback","rayTest","ClosestRayResultCallback","AllHitsRayResultCallback","ClosestRaycaster","AllHitsRaycaster","getHitPointWorld","h","get_m_hitPointWorld","getHitNormalWorld","get_m_hitNormalWorld","getCollisionObject","castObject","get_m_collisionObject","btRigidBody","threeObject","getHitPointsWorld","size","hh","at","getHitNormalsWorld","getCollisionObjects","threeObjects","objects","get_m_collisionObjects","rb","Clock","autoStart","startTime","oldTime","elapsedTime","running","performance","Date","now","stop","getElapsedTime","getDelta","diff","newTime","AmmoPhysics","rigidBodies","earlierDetectedCollisions","complexShapes","gravity","tmpEuler","Euler","tmpQuaternion","Quaternion","tmpVector3","tmpVector3a","tmpMatrix4","tmpMatrix4a","tmpBtQuaternion","btQuaternion","emptyV3","impactPoint","impactNormal","tmpTrans","b","includes","isSoftBody","removeSoftBody","removeRigidBody","destructor","splice","setup","setupPhysicsWorld","convexBreaker","objectsToRemove","numObjectsToRemove","collisionEvents","collisionFlags","translateX","constraints","debugDrawer","debugDrawMode","drawOnTop","maxBufferSize","BufferGeometry","Float32Array","colors","setAttribute","BufferAttribute","setUsage","StaticDrawUsage","vertexColors","depthTest","LineSegments","renderOrder","frustumCulled","enabled","DebugDrawer","drawLine","bind","drawContactPoint","reportErrorWarning","draw3dText","setDebugMode","getDebugMode","setDebugDrawer","enable","disable","remove","update","needsUpdate","debugDrawWorld","setDrawRange","heap","HEAPF32","g","fromX","fromY","fromZ","setXYZ","toX","toY","toZ","pointOnB","normalOnB","distance","_lifeTime","warningString","Pointer_stringify","warnedOnce","_location","_textString","debugMode","updateDebugger","softBodies","collisionConfiguration","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","broadphase","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","btSoftBodyRigidBodyCollisionConfiguration","softBodySolver","btDefaultSoftBodySolver","btSoftRigidDynamicsWorld","setGravity","createDebrisFromBreakableObject","parent","setTimeout","removeDebris","updatePhysics","detectCollisions","deltaTime","stepSimulation","maxSubSteps","fixedTimeStep","objThree","ms","getMotionState","didUpdate","_emitUpdateEvents","eventEmitter","isKinematicObject","needUpdate","getWorldQuaternion","getWorldPosition","w","setWorldTransform","skipUpdate","isStaticObject","q","ignoreScale","getCollisionShape","getLocalScaling","compose","multiply","decompose","detectedCollisions","getDispatcher","numManifolds","getNumManifolds","contactManifold","getManifoldByIndexInternal","numContacts","getNumContacts","rb0","getBody0","rb1","getBody1","threeObject0","threeObject1","checkCollisions0","checkCollisions1","breakable0","breakable1","fractureImpulse0","fractureImpulse1","checkBreakable","contact","maxImpulse","contactPoint","getContactPoint","getDistance","impulse","getAppliedImpulse","get_m_positionWorldOnB","get_m_normalWorldOnB","names","sort","combinedName","find","collision","MAX_FRAGMENT_DEPTH","physicsBody","vel","getLinearVelocity","angVel","getAngularVelocity","fragment","split","obj0","debug","collider","raycaster","prepareThreeObjectForCollisionShape","defaultParams","test","parameters","createCollisionShape","quat","axis","btHalfExtents","isGeometry","fromGeometry","vertexArray","matrixArray","indexArray","extractData","btBoxShape","btSphereShape","btCylinderShape","btCylinderShapeX","btCylinderShapeZ","btConeShape","btConeShapeX","btConeShapeZ","btCapsuleShape","btCapsuleShapeX","btCapsuleShapeZ","SIMD_PI","subdivisions","gap","sqrt","cos","cylinderShape","compoundShape","btCompoundShape","forward","rotation","rotate","addChildShape","createTorusShape","_compoundOffset","mergeCollisionShapesToCompoundShape","collisionShapes","_childOffset","pos","applyPosQuatScaleMargin","getWorldScale","toString","slice","compound","collisionGroup","collisionMask","addChildren","map","localTransform","rigidBody","collisionShapeToRigidBody","addRigidBodyToWorld","cs","children","child","addRigidBody","ptr","values","errors","_needUpdate","tmpBtVector3_1","setupEventEmitter","need","onUpdateEvent","updateCallback","collisionCallback","onCollision","refresh","setFromEuler","ammoQuat","q1","normalize","setPosition","setVelocity","setLinearVelocity","setVelocityX","setVelocityY","setVelocityZ","setAngularVelocity","setAngularVelocityX","setAngularVelocityY","setAngularVelocityZ","applyForce","applyCentralImpulse","applyForceX","applyForceY","applyForceZ","applyCentralForce","applyCentralLocalForce","applyImpulse","relativePosition","applyLocalTorque","applyTorque","applyTorqueImpulse","setCollisionFlags","getCollisionFlags","setRestitution","setBounciness","setFriction","linear","angular","setLinearFactor","setAngularFactor","setCcdMotionThreshold","threshold","setCcdSweptSphereRadius","setLocalScaling","disableDeactivation","motionState","btDefaultMotionState","localInertia","calculateLocalInertia","rbInfo","btRigidBodyConstructionInfo","setActivationState"],"sourceRoot":""}